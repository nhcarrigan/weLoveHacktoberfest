{"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/faq.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/faq.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":0},"end":{"line":53,"column":2}},"6":{"start":{"line":11,"column":37},"end":{"line":15,"column":30}},"7":{"start":{"line":16,"column":35},"end":{"line":18,"column":79}},"8":{"start":{"line":20,"column":8},"end":{"line":51,"column":9}},"9":{"start":{"line":21,"column":12},"end":{"line":21,"column":43}},"10":{"start":{"line":22,"column":28},"end":{"line":22,"column":75}},"11":{"start":{"line":23,"column":27},"end":{"line":23,"column":78}},"12":{"start":{"line":23,"column":53},"end":{"line":23,"column":77}},"13":{"start":{"line":24,"column":12},"end":{"line":27,"column":13}},"14":{"start":{"line":25,"column":16},"end":{"line":25,"column":80}},"15":{"start":{"line":26,"column":16},"end":{"line":26,"column":23}},"16":{"start":{"line":28,"column":25},"end":{"line":28,"column":60}},"17":{"start":{"line":29,"column":26},"end":{"line":29,"column":57}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":44}},"19":{"start":{"line":31,"column":12},"end":{"line":31,"column":48}},"20":{"start":{"line":32,"column":12},"end":{"line":35,"column":15}},"21":{"start":{"line":36,"column":29},"end":{"line":46,"column":17}},"22":{"start":{"line":47,"column":12},"end":{"line":47,"column":50}},"23":{"start":{"line":50,"column":12},"end":{"line":50,"column":71}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":37},"end":{"line":15,"column":30}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":23},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":35},"end":{"line":18,"column":79}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":10}},"loc":{"start":{"line":19,"column":38},"end":{"line":52,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":44},"end":{"line":23,"column":45}},"loc":{"start":{"line":23,"column":53},"end":{"line":23,"column":77}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":27,"column":13}},{"start":{"line":24,"column":12},"end":{"line":27,"column":13}}],"line":24},"1":{"loc":{"start":{"line":36,"column":29},"end":{"line":46,"column":17}},"type":"cond-expr","locations":[{"start":{"line":37,"column":18},"end":{"line":43,"column":17}},{"start":{"line":44,"column":18},"end":{"line":46,"column":17}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"f":{"0":1,"1":1,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/faq.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/faq.ts"],"names":[],"mappings":";;;AAAA,2CAA+D;AAE/D,uCAAoC;AAEpC,wDAAqD;AAExC,QAAA,GAAG,GAAY;IAC1B,IAAI,EAAE,IAAI,gCAAmB,EAAE;SAC5B,OAAO,CAAC,KAAK,CAAC;SACd,cAAc,CAAC,6CAA6C,CAAC;SAC7D,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,UAAU,CAAC;SACnB,cAAc,CAAC,kCAAkC,CAAC;SAClD,WAAW,CAAC,IAAI,CAAC;SACjB,eAAe,CAAC,IAAI,CAAC,CACzB;SACA,aAAa,CAAC,CAAC,MAAM,EAAE,EAAE,CACxB,MAAM;SACH,OAAO,CAAC,MAAM,CAAC;SACf,cAAc,CAAC,sDAAsD,CAAC,CAC1E;IACH,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE;QAC/B,IAAI;YACF,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;YAC/B,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAChE,MAAM,MAAM,GAAG,WAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC;YAE5D,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,WAAW,CAAC,SAAS,CAAC,sBAAsB,OAAO,KAAK,CAAC,CAAC;gBAChE,OAAO;aACR;YAED,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAEjD,MAAM,KAAK,GAAG,IAAI,yBAAY,EAAE,CAAC;YACjC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAChC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpC,KAAK,CAAC,SAAS,CAAC;gBACd,IAAI,EAAE,8CAA8C;gBACpD,OAAO,EAAE,wCAAwC;aAClD,CAAC,CAAC;YAEH,MAAM,QAAQ,GAAG,IAAI;gBACnB,CAAC,CAAC;oBACE,MAAM,EAAE,CAAC,KAAK,CAAC;oBACf,OAAO,EAAE,UAAU,IAAI,CAAC,EAAE,sCAAsC;oBAChE,eAAe,EAAE;wBACf,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;qBACjB;iBACF;gBACH,CAAC,CAAC;oBACE,MAAM,EAAE,CAAC,KAAK,CAAC;iBAChB,CAAC;YAEN,MAAM,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SACvC;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,IAAA,2BAAY,EAAC,aAAa,EAAE,GAAG,CAAC,CAAC;SACxC;IACH,CAAC;CACF,CAAC","sourcesContent":["import { EmbedBuilder, SlashCommandBuilder } from \"discord.js\";\n\nimport { tags } from \"../data/tags\";\nimport { Command } from \"../interfaces/Command\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\nexport const faq: Command = {\n  data: new SlashCommandBuilder()\n    .setName(\"faq\")\n    .setDescription(\"Get answers for frequently asked questions.\")\n    .addStringOption((option) =>\n      option\n        .setName(\"question\")\n        .setDescription(\"The question to find in the FAQ.\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    )\n    .addUserOption((option) =>\n      option\n        .setName(\"user\")\n        .setDescription(\"The user to whom the request should be addressed to.\")\n    ),\n  run: async (_bot, interaction) => {\n    try {\n      await interaction.deferReply();\n      const targetQ = interaction.options.getString(\"question\", true);\n      const target = tags.find((tag) => tag.question === targetQ);\n\n      if (!target) {\n        await interaction.editReply(`No tag found for \\`${targetQ}\\`.`);\n        return;\n      }\n\n      const user = interaction.options.getUser(\"user\");\n\n      const embed = new EmbedBuilder();\n      embed.setTitle(target.question);\n      embed.setDescription(target.answer);\n      embed.setFooter({\n        text: \"Join our server: https://chat.nhcarrigan.com\",\n        iconURL: \"https://cdn.nhcarrigan.com/profile.png\",\n      });\n\n      const response = user\n        ? {\n            embeds: [embed],\n            content: `Hey <@!${user.id}>, this should answer your question.`,\n            allowedMentions: {\n              users: [user.id],\n            },\n          }\n        : {\n            embeds: [embed],\n          };\n\n      await interaction.editReply(response);\n    } catch (err) {\n      await errorHandler(\"faq command\", err);\n    }\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d33de3071e69193d0b1d477b968dc15ec8794b4d","contentHash":"5bf283c9f3d90428e77f4af0f777debc1beca335acbb8f8dd935d2e2aca990bf"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/tags.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/tags.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":0},"end":{"line":101,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/tags.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/data/tags.ts"],"names":[],"mappings":";;;AAEa,QAAA,IAAI,GAAU;IACzB;QACE,MAAM,EACJ,kUAAkU;QACpU,QAAQ,EAAE,6CAA6C;KACxD;IACD;QACE,MAAM,EACJ,ilBAAilB;QACnlB,QAAQ,EAAE,sBAAsB;KACjC;IACD;QACE,MAAM,EACJ,2IAA2I;QAC7I,QAAQ,EAAE,gCAAgC;KAC3C;IACD;QACE,MAAM,EACJ,ynBAAynB;QAC3nB,QAAQ,EACN,qEAAqE;KACxE;IACD;QACE,MAAM,EACJ,4MAA4M;QAC9M,QAAQ,EAAE,+CAA+C;KAC1D;IACD;QACE,MAAM,EAAE,itBAAitB;QACztB,QAAQ,EAAE,wCAAwC;KACnD;IACD;QACE,MAAM,EACJ,uaAAua;QACza,QAAQ,EAAE,mBAAmB;KAC9B;IACD;QACE,MAAM,EACJ,2hBAA2hB;QAC7hB,QAAQ,EAAE,gEAAgE;KAC3E;IACD;QACE,MAAM,EAAE,0MAA0M;QAClN,QAAQ,EAAE,yCAAyC;KACpD;IACD;QACE,MAAM,EACJ,2MAA2M;QAC7M,QAAQ,EAAE,gEAAgE;KAC3E;IACD;QACE,MAAM,EACJ,6RAA6R;QAC/R,QAAQ,EAAE,4CAA4C;KACvD;IACD;QACE,MAAM,EACJ,sbAAsb;QACxb,QAAQ,EAAE,4CAA4C;KACvD;IACD;QACE,MAAM,EACJ,+QAA+Q;QACjR,QAAQ,EAAE,2CAA2C;KACtD;IACD;QACE,MAAM,EACJ,2FAA2F;QAC7F,QAAQ,EAAE,6BAA6B;KACxC;IACD;QACE,MAAM,EAAE,kEAAkE;QAC1E,QAAQ,EAAE,8BAA8B;KACzC;IACD;QACE,MAAM,EAAE,iCAAiC;QACzC,QAAQ,EAAE,4BAA4B;KACvC;IACD;QACE,MAAM,EAAE,kEAAkE;QAC1E,QAAQ,EAAE,yBAAyB;KACpC;IACD;QACE,MAAM,EAAE,cAAc;QACtB,QAAQ,EAAE,MAAM;KACjB;IACD;QACE,MAAM,EACJ,6HAA6H;QAC/H,QAAQ,EAAE,mCAAmC;KAC9C;IACD;QACE,MAAM,EACJ,qTAAqT;QACvT,QAAQ,EAAE,0CAA0C;KACrD;IACD;QACE,MAAM,EACJ,qQAAqQ;QACvQ,QAAQ,EACN,kEAAkE;KACrE;IACD;QACE,MAAM,EACJ,uJAAuJ;QACzJ,QAAQ,EAAE,wCAAwC;KACnD;IACD;QACE,MAAM,EACJ,4SAA4S;QAC9S,QAAQ,EAAE,gDAAgD;KAC3D;IACD;QACE,MAAM,EACJ,0bAA0b;QAC5b,QAAQ,EAAE,oCAAoC;KAC/C;CACF,CAAC","sourcesContent":["import { Tag } from \"../interfaces/Tag\";\n\nexport const tags: Tag[] = [\n  {\n    answer:\n      \"You don't. There's no way to tell which repos have been excluded. However, repos [are not arbitrarily excluded](https://hacktoberfest.com/participation/#spam). Simplistic repos, list repos, collection repos, and DSA repos are some examples of repos that generally get excluded, though exceptions can (very rarely) apply.\",\n    question: \"How do I check if a repo has been excluded?\",\n  },\n  {\n    answer:\n      \"You can contribute to any repo with the hacktoberfest label, or repos using the `hacktoberfest-accepted` label on individual PRs/MRs. You can find these by searching on either [GitHub](https://github.com/topics/hacktoberfest) or [GitLab](https://gitlab.com/explore/projects/topics/hacktoberfest).\\n\\nYou can contribute both code and low-code. See also [GitHub's guide](https://opensource.guide/how-to-contribute/) for contributing if you're not sure how. The [Hacktoberfest website](https://hacktoberfest.com/participation/#contributors) also contains some resources to help you get started.\",\n    question: \"How do I contribute?\",\n  },\n  {\n    answer:\n      \"Hacktoberfest starts on the 1st of October and ends on October 31st. PRs created before October 1st, or after October 31st, do not count.\",\n    question: \"When does Hacktoberfest start?\",\n  },\n  {\n    answer:\n      \"You have had 2 or more PRs/MRs labelled with `spam` and have been disqualified from participating in Hacktoberfest.\\n\\nThe Hacktoberfest team cannot control how maintainers choose to label your contributions, and as such we cannot offer support here. You can politely ask the maintainer to remove the labels, but ultimately it is their choice. Please do not harass maintainers.\\n\\nIf the maintainer chooses to remove the label, let us know so we can re-evaluate your Hacktoberfest account. Note that PRs/MRs labelled with `invalid` will not count toward disqualification, but will also not count toward your Hacktoberfest progress.\",\n    question:\n      \"I have four completed PRs. Why don't I see the confirmation screen?\",\n  },\n  {\n    answer:\n      \"To quote <@!541305895544422430>:\\n> I've said it before, and I'll say it again, y'all really don't need to worry about the exact time it all starts. You've got the whole month to get your PRs submitted.\",\n    question: \"What's the exact time I can start making PRs?\",\n  },\n  {\n    answer: `An \"Excluded Project\" is a repository which has been blocked by the Hacktoberfest team for being \"cheaty\" or \"spammy\".\\n\\nHacktoberfest is about making valuable contributions to open source, not adding a random algorithm, to a folder, adding a name or similar to \"win\".\\n\\nWe recommend searching for things that you use (Such as freeCodeCamp, Notion, zsh or a lot more!). You can also search <#735506115810426971> - we try to keep this clean of all cheaty repos.\\n\\nYou can read more about what Hacktoberfest is doing to reduce spam at <https://hacktoberfest.digitalocean.com/resources#reduce-spam>.\\n\\nFound a repo that you think doesn't follow the values? Report it at <https://hacktoberfest.digitalocean.com/report>.`,\n    question: \"Why does my PR say 'Excluded Project'?\",\n  },\n  {\n    answer:\n      \"The Hacktoberfest community is successful, in part, due to the efforts of the helpers to keep things safe and welcoming. Helpers not only moderate the community, but answer your questions and help you in your efforts to contribute to open source. Our valued helpers are:\\n\\n- [Matt](https://mattcowley.co.uk/)\\n- [LukeOCodes](https://github.com/lukeocodes/)\\n- [Naomi](https://naomi.lgbt)\\n- [Walshy](https://walshy.dev/)\",\n    question: \"What is a helper?\",\n  },\n  {\n    answer:\n      \"Want to find a project with a specific language to contribute to?\\n\\nYou can use this link to find hacktoberfest repos in a language of your choice: `https://github.com/topics/hacktoberfest?l=<<change_this_to_language>>`. Don't forget to replace `<<change_this_to_language>>` with the language you want to search for.\\n\\nAs an example, if you want to find JavaScript projects, you'd use: [https://github.com/topics/hacktoberfest?l=javascript](https://github.com/topics/hacktoberfest?l=javascript). You can also use the `/search` command.\",\n    question: \"How do I find projects in specific languages to Contribute to?\",\n  },\n  {\n    answer: `The seven day \"matures\" period begins after your PR is approved/merged, and is the Hacktoberfest review period. There is nothing wrong with your PR, you just need to be patient for the 7 days to pass.`,\n    question: \"Why does my PR say 'Matures in 7 days'?\",\n  },\n  {\n    answer:\n      \"Yes. There are no requirements or rules for who has to own the repository.\\n\\nHowever, you're still encouraged to contribute to other repositories rather than, or in addition to, your own repositories.\",\n    question: \"Do PRs/MRs to my own repo or a repo I'm a maintainer of count?\",\n  },\n  {\n    answer:\n      \"If your profile isn't showing any PRs, try hard-refreshing the page.\\n\\nUpdates to the state of your PRs can take around 15 minutes on average. If your PR was merged and hasn't updated on the website immediately, don't panic! Your contributions will be counted on the next update. 🙂\",\n    question: \"Why is my PR not showing up on my profile?\",\n  },\n  {\n    answer:\n      \"Any project with the `hacktoberfest` topic is considered to be participating in Hacktoberfest.\\n\\nYou can search for these both on [GitHub](https://github.com/topics/hacktoberfest) and [GitLab](https://gitlab.com/explore/projects?topic=hacktoberfest).\\n\\nWe also recommend taking a look at <#735506115810426971> as folks share their projects there. You can also use the `/search` command to generate query links for a specific language.\",\n    question: \"Where do I find projects to contribute to?\",\n  },\n  {\n    answer:\n      \"```\\nPRs/MRs count if:\\nSubmitted during the month of October AND (\\n  The PR/MR is labelled as hacktoberfest-accepted by a maintainer OR\\n  Submitted in a repo with the hacktoberfest topic AND (\\n    The PR/MR is merged OR\\n    The PR/MR has been approved\\n  )\\n)\\n```\",\n    question: \"How does a PR/MR count for Hacktoberfest?\",\n  },\n  {\n    answer:\n      \"You need four PRs/MRs accepted between October 1 and October 31 to complete Hacktoberfest\",\n    question: \"How many PRs/MRs do I need?\",\n  },\n  {\n    answer: \"Hacktoberfest is not offering shirts or physical swag this year.\",\n    question: \"Are there still shirts left?\",\n  },\n  {\n    answer: \"Yes, Hacktoberfest has started.\",\n    question: \"Has Hacktoberfest started?\",\n  },\n  {\n    answer: \"Hacktoberfest is not offering shirts or physical swag this year.\",\n    question: \"How do I track my swag?\",\n  },\n  {\n    answer: \"Oh hello uwu\",\n    question: \"UWU?\",\n  },\n  {\n    answer:\n      \"Hacktoberfest doesn't have any winners or losers. Positive contributions to the open-source community is a win for everyone\",\n    question: \"Can I/how do I win Hacktoberfest?\",\n  },\n  {\n    answer:\n      \"You have to opt-in via email for Holopin badges. If you opted in, make sure that the email did not land in your spam folder. Also, be sure that you opted in with the correct email address (not the GitHub no-reply email address). Finally, you should also see a `Claim Now` link in your Hacktoberfest profile.\",\n    question: \"Why aren't my Holopin badges showing up?\",\n  },\n  {\n    answer:\n      \"As long as your PR/MR is approved, merged, or given the `hacktoberfest-accepted` label before October ends, it can be eligible for Hacktoberfest. The maturation period might extend into November, but that will not prevent your contribution from being counted.\",\n    question:\n      \"Will my PR/MR still be eligible, even if October is almost done?\",\n  },\n  {\n    answer:\n      \"Maintainer activities are not tracked. Additionally, there are no rewards for maintainer activity this year. Only 4 completed PR/MRs will be tracked.\",\n    question: \"How do I track my maintainer activity?\",\n  },\n  {\n    answer:\n      \"We do not typically accept appeals for spam-based disqualification. You may politely ask the maintainer to remove the `spam` label, but it is their choice. Please do not harass maintainers. If the maintainer chooses to remove the label, let us know so we can re-evaluate your Hacktoberfest account.\",\n    question: \"How do I appeal my account being disqualified?\",\n  },\n  {\n    answer:\n      \"To quote <@!465650873650118659>:\\n> Look y'all, we don't have the time to sit here and play 'is this eligible or not'.\\n\\nHere's some guidelines:\\n- Pick an actual project. If it's designed to help you find quick and easy PRs just to 'win' hacktoberfest, move on.\\n- If you PR to a project that isn't eligible, who cares? That just means it won't count toward your 4 PRs. As long as your **PR itself** isn't labelled spam, there's no issue.\",\n    question: \"Is this specific project eligible?\",\n  },\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93d64040c6f346164181ece46c1d77c43f645d70","contentHash":"7d78b65f89f55388724e8795e3510d34f6e732ee0d1da449b1ea5761d959bde0"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/errorHandler.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/errorHandler.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"26":{"start":{"line":27,"column":15},"end":{"line":27,"column":52}},"27":{"start":{"line":28,"column":21},"end":{"line":28,"column":42}},"28":{"start":{"line":29,"column":21},"end":{"line":29,"column":44}},"29":{"start":{"line":37,"column":21},"end":{"line":53,"column":1}},"30":{"start":{"line":38,"column":18},"end":{"line":38,"column":21}},"31":{"start":{"line":39,"column":4},"end":{"line":39,"column":82}},"32":{"start":{"line":40,"column":4},"end":{"line":40,"column":115}},"33":{"start":{"line":41,"column":4},"end":{"line":41,"column":35}},"34":{"start":{"line":42,"column":17},"end":{"line":42,"column":80}},"35":{"start":{"line":43,"column":18},"end":{"line":43,"column":49}},"36":{"start":{"line":44,"column":4},"end":{"line":44,"column":59}},"37":{"start":{"line":45,"column":4},"end":{"line":45,"column":55}},"38":{"start":{"line":46,"column":4},"end":{"line":51,"column":7}},"39":{"start":{"line":52,"column":4},"end":{"line":52,"column":41}},"40":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":21},"end":{"line":37,"column":22}},"loc":{"start":{"line":37,"column":45},"end":{"line":53,"column":1}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":49,"column":28},"end":{"line":49,"column":69}},"type":"binary-expr","locations":[{"start":{"line":49,"column":28},"end":{"line":49,"column":55}},{"start":{"line":49,"column":59},"end":{"line":49,"column":69}}],"line":49}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1,"6":0},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[1,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/errorHandler.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/errorHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAuC;AACvC,2CAAyD;AAEzD,6CAA0C;AAE1C;;;;;;GAMG;AACI,MAAM,YAAY,GAAG,KAAK,EAC/B,OAAe,EACf,GAAY,EACG,EAAE;IACjB,MAAM,KAAK,GAAG,GAAY,CAAC;IAC3B,uBAAU,CAAC,GAAG,CAAC,OAAO,EAAE,6BAA6B,OAAO,GAAG,CAAC,CAAC;IACjE,uBAAU,CAAC,GAAG,CACZ,OAAO,EACP,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CACzE,CAAC;IACF,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAE/B,MAAM,IAAI,GAAG,IAAI,0BAAa,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,UAAoB,EAAE,CAAC,CAAC;IAE1E,MAAM,KAAK,GAAG,IAAI,yBAAY,EAAE,CAAC;IACjC,KAAK,CAAC,QAAQ,CAAC,6BAA6B,OAAO,EAAE,CAAC,CAAC;IACvD,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACnD,KAAK,CAAC,SAAS,CAAC;QACd;YACE,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,SAAS,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,UAAU,QAAQ;SAClE;KACF,CAAC,CAAC;IAEH,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACvC,CAAC,CAAC;AAzBW,QAAA,YAAY,gBAyBvB","sourcesContent":["import * as Sentry from \"@sentry/node\";\nimport { EmbedBuilder, WebhookClient } from \"discord.js\";\n\nimport { logHandler } from \"./logHandler\";\n\n/**\n * Standard error handling module to pipe errors to Sentry and\n * format the error for logging.\n *\n * @param {string} context A description of where the error occurred.\n * @param {unknown} err The error object.\n */\nexport const errorHandler = async (\n  context: string,\n  err: unknown\n): Promise<void> => {\n  const error = err as Error;\n  logHandler.log(\"error\", `There was an error in the ${context}:`);\n  logHandler.log(\n    \"error\",\n    JSON.stringify({ errorMessage: error.message, errorStack: error.stack })\n  );\n  Sentry.captureException(error);\n\n  const hook = new WebhookClient({ url: process.env.DEBUG_HOOK as string });\n\n  const embed = new EmbedBuilder();\n  embed.setTitle(`There was an error in the ${context}`);\n  embed.setDescription(error.message.slice(0, 2000));\n  embed.addFields([\n    {\n      name: \"Stack\",\n      value: `\\`\\`\\`${error.stack?.slice(0, 1000) || \"no stack\"}\\`\\`\\``,\n    },\n  ]);\n\n  await hook.send({ embeds: [embed] });\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5ab22306d7e4934de36f9bf44c44b1b27ace71b4","contentHash":"d06a1b141848515204e2b416ce8ad8245f871ecde77a2b04ec5f898518482323"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/logHandler.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/logHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":49},"end":{"line":5,"column":65}},"4":{"start":{"line":13,"column":0},"end":{"line":21,"column":3}},"5":{"start":{"line":19,"column":37},"end":{"line":19,"column":90}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":27},"end":{"line":19,"column":28}},"loc":{"start":{"line":19,"column":37},"end":{"line":19,"column":90}},"line":19}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/logHandler.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/logHandler.ts"],"names":[],"mappings":";;;AAAA,qCAAmE;AAEnE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,gBAAM,CAAC;AAExD;;;;;;GAMG;AACU,QAAA,UAAU,GAAG,IAAA,sBAAY,EAAC;IACrC,MAAM,EAAE,gBAAM,CAAC,GAAG,CAAC,MAAM;IACzB,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,CAAC,IAAI,oBAAU,CAAC,OAAO,EAAE,CAAC;IACtC,MAAM,EAAE,OAAO,CACb,SAAS,CAAC;QACR,MAAM,EAAE,qBAAqB;KAC9B,CAAC,EACF,QAAQ,EAAE,EACV,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC,CACxE;IACD,WAAW,EAAE,KAAK;CACnB,CAAC,CAAC","sourcesContent":["import { createLogger, format, transports, config } from \"winston\";\n\nconst { combine, timestamp, colorize, printf } = format;\n\n/**\n * Standard log handler, using winston to wrap and format\n * messages. Call with `logHandler.log(level, message)`.\n *\n * @param {string} level - The log level to use.\n * @param {string} message - The message to log.\n */\nexport const logHandler = createLogger({\n  levels: config.npm.levels,\n  level: \"silly\",\n  transports: [new transports.Console()],\n  format: combine(\n    timestamp({\n      format: \"YYYY-MM-DD HH:mm:ss\",\n    }),\n    colorize(),\n    printf((info) => `${info.level}: ${[info.timestamp]}: ${info.message}`)\n  ),\n  exitOnError: false,\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6d7c58718a78f6e28fc436066fb42e9c6b24af3a","contentHash":"eeffd9eab05ffe53d92d12aeebb1059760b037115d50a86cff18e9f693d9d9fb"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/holopin.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/holopin.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":0},"end":{"line":35,"column":2}},"5":{"start":{"line":10,"column":37},"end":{"line":14,"column":30}},"6":{"start":{"line":16,"column":8},"end":{"line":33,"column":9}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":43}},"8":{"start":{"line":18,"column":27},"end":{"line":18,"column":74}},"9":{"start":{"line":19,"column":24},"end":{"line":19,"column":85}},"10":{"start":{"line":19,"column":80},"end":{"line":19,"column":84}},"11":{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},"12":{"start":{"line":21,"column":16},"end":{"line":21,"column":97}},"13":{"start":{"line":22,"column":16},"end":{"line":22,"column":23}},"14":{"start":{"line":24,"column":32},"end":{"line":24,"column":55}},"15":{"start":{"line":25,"column":27},"end":{"line":25,"column":51}},"16":{"start":{"line":26,"column":31},"end":{"line":28,"column":14}},"17":{"start":{"line":29,"column":12},"end":{"line":29,"column":65}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":75}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":25},"end":{"line":10,"column":26}},"loc":{"start":{"line":10,"column":37},"end":{"line":14,"column":30}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":10}},"loc":{"start":{"line":15,"column":38},"end":{"line":34,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":74},"end":{"line":19,"column":75}},"loc":{"start":{"line":19,"column":80},"end":{"line":19,"column":84}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":23,"column":13}},{"start":{"line":20,"column":12},"end":{"line":23,"column":13}}],"line":20},"1":{"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":42}},"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":20}},{"start":{"line":20,"column":24},"end":{"line":20,"column":42}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"f":{"0":1,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/holopin.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/holopin.ts"],"names":[],"mappings":";;;AAAA,2CAAoE;AAGpE,wDAAqD;AAExC,QAAA,OAAO,GAAY;IAC9B,IAAI,EAAE,IAAI,gCAAmB,EAAE;SAC5B,OAAO,CAAC,SAAS,CAAC;SAClB,cAAc,CAAC,uCAAuC,CAAC;SACvD,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,UAAU,CAAC;SACnB,cAAc,CAAC,kDAAkD,CAAC;SAClE,WAAW,CAAC,IAAI,CAAC;SACjB,eAAe,CAAC,IAAI,CAAC,CACzB;IACH,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE;QAC/B,IAAI;YACF,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;YAC/B,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAE/D,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,sBAAsB,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;YAE1E,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC9B,MAAM,WAAW,CAAC,SAAS,CACzB,mDAAmD,CACpD,CAAC;gBACF,OAAO;aACR;YAED,MAAM,WAAW,GAAG,MAAM,GAAG,CAAC,WAAW,EAAE,CAAC;YAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,MAAM,UAAU,GAAG,IAAI,8BAAiB,CAAC,MAAM,EAAE;gBAC/C,IAAI,EAAE,GAAG,MAAM,MAAM;aACtB,CAAC,CAAC;YAEH,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtD;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,IAAA,2BAAY,EAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;SAC5C;IACH,CAAC;CACF,CAAC","sourcesContent":["import { AttachmentBuilder, SlashCommandBuilder } from \"discord.js\";\n\nimport { Command } from \"../interfaces/Command\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\nexport const holopin: Command = {\n  data: new SlashCommandBuilder()\n    .setName(\"holopin\")\n    .setDescription(\"Display a user's Holopin badge board.\")\n    .addStringOption((option) =>\n      option\n        .setName(\"username\")\n        .setDescription(\"The user to display the Holopin badge board for.\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    ),\n  run: async (_bot, interaction) => {\n    try {\n      await interaction.deferReply();\n      const target = interaction.options.getString(\"username\", true);\n\n      const res = await fetch(`https://holopin.me/${target}`).catch(() => null);\n\n      if (!res || res.status !== 200) {\n        await interaction.editReply(\n          \"Could not locate that user's Holopin badge board.\"\n        );\n        return;\n      }\n\n      const arrayBuffer = await res.arrayBuffer();\n      const buffer = Buffer.from(arrayBuffer);\n      const attachment = new AttachmentBuilder(buffer, {\n        name: `${target}.png`,\n      });\n\n      await interaction.editReply({ files: [attachment] });\n    } catch (err) {\n      await errorHandler(\"holopin command\", err);\n    }\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9d9168fec642f67db2dff995a9e2b54fe62d24a9","contentHash":"b4d25ef00fe93452043d47e946012ed214474a122f00782212d0e4d1597dd8b9"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/report.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/report.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":57,"column":2}},"4":{"start":{"line":9,"column":37},"end":{"line":13,"column":93}},"5":{"start":{"line":14,"column":37},"end":{"line":17,"column":26}},"6":{"start":{"line":18,"column":37},"end":{"line":21,"column":26}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":58}},"8":{"start":{"line":24,"column":25},"end":{"line":24,"column":72}},"9":{"start":{"line":25,"column":22},"end":{"line":25,"column":66}},"10":{"start":{"line":26,"column":21},"end":{"line":26,"column":64}},"11":{"start":{"line":27,"column":21},"end":{"line":27,"column":40}},"12":{"start":{"line":28,"column":22},"end":{"line":28,"column":44}},"13":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":137}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":19}},"16":{"start":{"line":33,"column":25},"end":{"line":42,"column":32}},"17":{"start":{"line":41,"column":33},"end":{"line":41,"column":49}},"18":{"start":{"line":42,"column":28},"end":{"line":42,"column":31}},"19":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"20":{"start":{"line":44,"column":12},"end":{"line":44,"column":86}},"21":{"start":{"line":45,"column":12},"end":{"line":45,"column":19}},"22":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"23":{"start":{"line":48,"column":12},"end":{"line":48,"column":108}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":19}},"25":{"start":{"line":51,"column":8},"end":{"line":54,"column":9}},"26":{"start":{"line":52,"column":12},"end":{"line":52,"column":115}},"27":{"start":{"line":53,"column":12},"end":{"line":53,"column":19}},"28":{"start":{"line":55,"column":8},"end":{"line":55,"column":104}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":25},"end":{"line":9,"column":26}},"loc":{"start":{"line":9,"column":37},"end":{"line":13,"column":93}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":25},"end":{"line":14,"column":26}},"loc":{"start":{"line":14,"column":37},"end":{"line":17,"column":26}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":25},"end":{"line":18,"column":26}},"loc":{"start":{"line":18,"column":37},"end":{"line":21,"column":26}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":10}},"loc":{"start":{"line":22,"column":37},"end":{"line":56,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":18},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":33},"end":{"line":41,"column":49}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":19},"end":{"line":42,"column":20}},"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":31}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":32,"column":9}},{"start":{"line":29,"column":8},"end":{"line":32,"column":9}}],"line":29},"1":{"loc":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},{"start":{"line":43,"column":8},"end":{"line":46,"column":9}}],"line":43},"2":{"loc":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},{"start":{"line":47,"column":8},"end":{"line":50,"column":9}}],"line":47},"3":{"loc":{"start":{"line":51,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":54,"column":9}},{"start":{"line":51,"column":8},"end":{"line":54,"column":9}}],"line":51}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/report.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/report.ts"],"names":[],"mappings":";;;AAAA,2CAAiD;AAIpC,QAAA,MAAM,GAAY;IAC7B,IAAI,EAAE,IAAI,gCAAmB,EAAE;SAC5B,OAAO,CAAC,QAAQ,CAAC;SACjB,cAAc,CACb,6DAA6D,CAC9D;SACA,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,UAAU,CAAC;SACnB,cAAc,CAAC,sCAAsC,CAAC;SACtD,WAAW,CAAC,IAAI,CAAC;SACjB,UAAU,CACT,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CACpC,CACJ;SACA,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,OAAO,CAAC;SAChB,cAAc,CAAC,uCAAuC,CAAC;SACvD,WAAW,CAAC,IAAI,CAAC,CACrB;SACA,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,MAAM,CAAC;SACf,cAAc,CAAC,6BAA6B,CAAC;SAC7C,WAAW,CAAC,IAAI,CAAC,CACrB;IACH,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE;QAC9B,MAAM,WAAW,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QAElD,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjE,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC3D,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEzD,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;QACjC,MAAM,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,WAAW,CAAC,SAAS,CACzB,+FAA+F,CAChG,CAAC;YACF,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,2EAA2E,EAC3E;YACE,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,aAAa,EAAE,UAAU,KAAK,EAAE;gBAChC,cAAc,EAAE,kBAAkB;aACnC;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,KAAK,IAAI,IAAI,EAAE,EAAE,CAAC;SAC7D,CACF;aACE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;aACrC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAEvB,IAAI,QAAQ,CAAC,IAAI,KAAK,gBAAgB,EAAE;YACtC,MAAM,WAAW,CAAC,SAAS,CAAC,4CAA4C,CAAC,CAAC;YAC1E,OAAO;SACR;QAED,IAAI,QAAQ,CAAC,IAAI,KAAK,oBAAoB,EAAE;YAC1C,MAAM,WAAW,CAAC,SAAS,CACzB,kEAAkE,CACnE,CAAC;YACF,OAAO;SACR;QAED,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;YAChC,MAAM,WAAW,CAAC,SAAS,CACzB,0CAA0C,QAAQ,QAAQ,KAAK,IAAI,IAAI,EAAE,CAC1E,CAAC;YACF,OAAO;SACR;QAED,MAAM,WAAW,CAAC,SAAS,CACzB,kEAAkE,CACnE,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { SlashCommandBuilder } from \"discord.js\";\n\nimport { Command } from \"../interfaces/Command\";\n\nexport const report: Command = {\n  data: new SlashCommandBuilder()\n    .setName(\"report\")\n    .setDescription(\n      \"Report a repository for being ineligible for Hacktoberfest.\"\n    )\n    .addStringOption((option) =>\n      option\n        .setName(\"provider\")\n        .setDescription(\"The VCS provider for the repository.\")\n        .setRequired(true)\n        .setChoices(\n          { name: \"GitHub\", value: \"github\" },\n          { name: \"GitLab\", value: \"gitlab\" }\n        )\n    )\n    .addStringOption((option) =>\n      option\n        .setName(\"owner\")\n        .setDescription(\"The username of the repository owner.\")\n        .setRequired(true)\n    )\n    .addStringOption((option) =>\n      option\n        .setName(\"repo\")\n        .setDescription(\"The name of the repository.\")\n        .setRequired(true)\n    ),\n  run: async (bot, interaction) => {\n    await interaction.deferReply({ ephemeral: true });\n\n    const provider = interaction.options.getString(\"provider\", true);\n    const owner = interaction.options.getString(\"owner\", true);\n    const repo = interaction.options.getString(\"repo\", true);\n\n    const user = interaction.user.id;\n    const token = bot.reportTokens[user];\n\n    if (!token) {\n      await interaction.editReply(\n        \"You must set your token before reporting a repository. Please use `/token` to set your token.\"\n      );\n      return;\n    }\n\n    const response = await fetch(\n      \"https://hackathon-tracker.digitalocean.com/events/5/excluded_repositories\",\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ provider, name: `${owner}/${repo}` }),\n      }\n    )\n      .then(async (res) => await res.json())\n      .catch((err) => err);\n\n    if (response.code === \"InvalidContent\") {\n      await interaction.editReply(\"You have already reported this repository.\");\n      return;\n    }\n\n    if (response.code === \"InvalidCredentials\") {\n      await interaction.editReply(\n        \"Your token is invalid. Please use `/token` to update your token.\"\n      );\n      return;\n    }\n\n    if (response.code === \"NotFound\") {\n      await interaction.editReply(\n        `Could not find a repository at https://${provider}.com/${owner}/${repo}`\n      );\n      return;\n    }\n\n    await interaction.editReply(\n      `Your report has been submitted. Thank you for your contribution!`\n    );\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7328dfcd284a4d083dca26abf6a02523e48de60a","contentHash":"ec99ff9a93ef73273b67fed43b7ac28afa4428f95ca0f86016ec91604be403d8"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/search.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/search.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":0},"end":{"line":43,"column":2}},"6":{"start":{"line":11,"column":37},"end":{"line":15,"column":26}},"7":{"start":{"line":16,"column":38},"end":{"line":20,"column":30}},"8":{"start":{"line":22,"column":8},"end":{"line":41,"column":9}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":43}},"10":{"start":{"line":24,"column":24},"end":{"line":24,"column":66}},"11":{"start":{"line":25,"column":25},"end":{"line":25,"column":68}},"12":{"start":{"line":26,"column":24},"end":{"line":28,"column":130}},"13":{"start":{"line":29,"column":26},"end":{"line":32,"column":68}},"14":{"start":{"line":33,"column":12},"end":{"line":36,"column":15}},"15":{"start":{"line":37,"column":12},"end":{"line":37,"column":61}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":74}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":37},"end":{"line":15,"column":26}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":25},"end":{"line":16,"column":26}},"loc":{"start":{"line":16,"column":38},"end":{"line":20,"column":30}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":10}},"loc":{"start":{"line":21,"column":38},"end":{"line":42,"column":5}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":24},"end":{"line":28,"column":130}},"type":"cond-expr","locations":[{"start":{"line":27,"column":18},"end":{"line":27,"column":108}},{"start":{"line":28,"column":18},"end":{"line":28,"column":130}}],"line":26},"1":{"loc":{"start":{"line":28,"column":87},"end":{"line":28,"column":128}},"type":"binary-expr","locations":[{"start":{"line":28,"column":87},"end":{"line":28,"column":122}},{"start":{"line":28,"column":126},"end":{"line":28,"column":128}}],"line":28},"2":{"loc":{"start":{"line":32,"column":26},"end":{"line":32,"column":67}},"type":"binary-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":59}},{"start":{"line":32,"column":63},"end":{"line":32,"column":67}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"f":{"0":1,"1":1,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/search.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/search.ts"],"names":[],"mappings":";;;AAAA,2CAA+D;AAE/D,mDAI6B;AAE7B,wDAAqD;AAExC,QAAA,MAAM,GAAY;IAC7B,IAAI,EAAE,IAAI,gCAAmB,EAAE;SAC5B,OAAO,CAAC,QAAQ,CAAC;SACjB,cAAc,CACb,oEAAoE,CACrE;SACA,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,KAAK,CAAC;SACd,cAAc,CAAC,sDAAsD,CAAC;SACtE,UAAU,CACT,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,EACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CACpC;SACA,WAAW,CAAC,IAAI,CAAC,CACrB;SACA,eAAe,CAAC,CAAC,OAAO,EAAE,EAAE,CAC3B,OAAO;SACJ,OAAO,CAAC,MAAM,CAAC;SACf,cAAc,CAAC,2CAA2C,CAAC;SAC3D,WAAW,CAAC,IAAI,CAAC;SACjB,eAAe,CAAC,IAAI,CAAC,CACzB;IACH,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE;QAC/B,IAAI;YACF,MAAM,WAAW,CAAC,UAAU,EAAE,CAAC;YAC/B,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACvD,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CACxC,MAAM,EACN,IAAI,CAC2B,CAAC;YAElC,MAAM,GAAG,GACP,GAAG,KAAK,QAAQ;gBACd,CAAC,CAAC,WAAW,GAAG,oDAAoD,IAAI,oBAAoB;gBAC5F,CAAC,CAAC,WAAW,GAAG,uDACZ,6BAAiB,CAAC,IAAI,CAAC,IAAI,EAC7B,EAAE,CAAC;YAET,MAAM,KAAK,GAAG,IAAI,yBAAY,EAAE;iBAC7B,QAAQ,CAAC,GAAG,IAAI,gBAAgB,GAAG,EAAE,CAAC;iBACtC,cAAc,CACb,uBAAuB,IAAI,gBAAgB,GAAG,KAAK,GAAG,GAAG,CAC1D;iBACA,QAAQ,CAAC,2BAAe,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;YAC3C,KAAK,CAAC,SAAS,CAAC;gBACd,IAAI,EAAE,8CAA8C;gBACpD,OAAO,EAAE,wCAAwC;aAClD,CAAC,CAAC;YACH,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAClD;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,IAAA,2BAAY,EAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;SAC3C;IACH,CAAC;CACF,CAAC","sourcesContent":["import { EmbedBuilder, SlashCommandBuilder } from \"discord.js\";\n\nimport {\n  GitLabLanguageIds,\n  LanguageChoices,\n  LanguageColours,\n} from \"../config/Languages\";\nimport { Command } from \"../interfaces/Command\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\nexport const search: Command = {\n  data: new SlashCommandBuilder()\n    .setName(\"search\")\n    .setDescription(\n      \"Discover opensource projects built with your programming language.\"\n    )\n    .addStringOption((option) =>\n      option\n        .setName(\"vcs\")\n        .setDescription(\"The Version Control Service that you want to search.\")\n        .addChoices(\n          { name: \"GitHub\", value: \"github\" },\n          { name: \"GitLab\", value: \"gitlab\" }\n        )\n        .setRequired(true)\n    )\n    .addStringOption((options) =>\n      options\n        .setName(\"lang\")\n        .setDescription(\"The Language that you want to search for.\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    ),\n  run: async (_bot, interaction) => {\n    try {\n      await interaction.deferReply();\n      const vcs = interaction.options.getString(\"vcs\", true);\n      const lang = interaction.options.getString(\n        \"lang\",\n        true\n      ) as keyof typeof LanguageChoices;\n\n      const url =\n        vcs === \"github\"\n          ? `https://${vcs}.com/search?q=topic%3Ahacktoberfest%20language%3A${lang}&type=repositories`\n          : `https://${vcs}.com/explore/projects/topics/hacktoberfest?language=${\n              GitLabLanguageIds[lang] ?? \"\"\n            }`;\n\n      const embed = new EmbedBuilder()\n        .setTitle(`${lang} projects on ${vcs}`)\n        .setDescription(\n          `[Click here to view ${lang} projects on ${vcs}](${url})`\n        )\n        .setColor(LanguageColours[lang] ?? null);\n      embed.setFooter({\n        text: \"Join our server: https://chat.nhcarrigan.com\",\n        iconURL: \"https://cdn.nhcarrigan.com/profile.png\",\n      });\n      await interaction.editReply({ embeds: [embed] });\n    } catch (err) {\n      await errorHandler(\"search command\", err);\n    }\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f47ba1d9c54c800c28d368654d294041df8d21d1","contentHash":"6100707ee3040770ea2ddfbc73ffcff912aea93939c645375c13447aeb71d57c"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/Languages.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/Languages.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":87}},"2":{"start":{"line":8,"column":0},"end":{"line":34,"column":2}},"3":{"start":{"line":38,"column":0},"end":{"line":64,"column":2}},"4":{"start":{"line":70,"column":0},"end":{"line":96,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/Languages.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/config/Languages.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACU,QAAA,eAAe,GAAG;IAC7B,SAAS,EAAE,YAAY;IACvB,KAAK,EAAE,OAAO;IACd,CAAC,EAAE,GAAG;IACN,IAAI,EAAE,IAAI;IACV,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,OAAO;IACd,GAAG,EAAE,KAAK;IACV,UAAU,EAAE,YAAY;IACxB,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,UAAU,EAAE,YAAY;IACxB,kBAAkB,EAAE,kBAAkB;IACtC,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;IACpB,aAAa,EAAE,aAAa;IAC5B,GAAG,EAAE,KAAK;IACV,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,YAAY;IACxB,GAAG,EAAE,KAAK;CACX,CAAC;AAEF;;GAEG;AACU,QAAA,eAAe,GAExB;IACF,SAAS,EAAE,QAAQ;IACnB,KAAK,EAAE,QAAQ;IACf,CAAC,EAAE,QAAQ;IACX,IAAI,EAAE,QAAQ;IACd,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,GAAG,EAAE,QAAQ;IACb,UAAU,EAAE,QAAQ;IACpB,EAAE,EAAE,QAAQ;IACZ,GAAG,EAAE,QAAQ;IACb,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE,QAAQ;IACpB,kBAAkB,EAAE,QAAQ;IAC5B,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,QAAQ;IAClB,aAAa,EAAE,QAAQ;IACvB,GAAG,EAAE,QAAQ;IACb,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,QAAQ;IACd,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,UAAU,EAAE,QAAQ;IACpB,GAAG,EAAE,QAAQ;CACd,CAAC;AAEF;;;;GAIG;AACU,QAAA,iBAAiB,GAE1B;IACF,SAAS,EAAE,EAAE;IACb,KAAK,EAAE,GAAG;IACV,CAAC,EAAE,CAAC;IACJ,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,GAAG,EAAE,CAAC;IACN,UAAU,EAAE,EAAE;IACd,EAAE,EAAE,EAAE;IACN,GAAG,EAAE,EAAE;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,UAAU,EAAE,CAAC;IACb,kBAAkB,EAAE,EAAE;IACtB,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,aAAa,EAAE,EAAE;IACjB,GAAG,EAAE,EAAE;IACP,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,GAAG;IACT,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;IACT,UAAU,EAAE,EAAE;IACd,GAAG,EAAE,EAAE;CACR,CAAC","sourcesContent":["/**\n * This is the single source of truth. For choices in the command, this maps to\n * { value: name }.\n */\nexport const LanguageChoices = {\n  batchfile: \"Batch File\",\n  blade: \"Blade\",\n  c: \"C\",\n  \"c#\": \"C#\",\n  \"c++\": \"C++\",\n  cmake: \"CMake\",\n  css: \"CSS\",\n  dockerfile: \"Dockerfile\",\n  go: \"Go\",\n  hcl: \"HCL\",\n  html: \"HTML\",\n  java: \"Java\",\n  javascript: \"JavaScript\",\n  \"jupyter notebook\": \"Jupyter Notebook\",\n  kotlin: \"Kotlin\",\n  makefile: \"Makefile\",\n  \"objective-c\": \"Objective-C\",\n  php: \"PHP\",\n  python: \"Python\",\n  ruby: \"Ruby\",\n  scss: \"SCSS\",\n  shell: \"Shell\",\n  swift: \"Swift\",\n  typescript: \"TypeScript\",\n  vue: \"Vue\",\n};\n\n/**\n * Values grabbed from https://github.com/ozh/github-colors/blob/master/colors.json.\n */\nexport const LanguageColours: {\n  [key in keyof typeof LanguageChoices]: number;\n} = {\n  batchfile: 0xc1f12e,\n  blade: 0xf7523f,\n  c: 0x555555,\n  \"c#\": 0x178600,\n  \"c++\": 0xf34b7d,\n  cmake: 0xda3434,\n  css: 0x563d7c,\n  dockerfile: 0x384d54,\n  go: 0x00add8,\n  hcl: 0x844fba,\n  html: 0xe34c26,\n  java: 0xb07219,\n  javascript: 0xf1e05a,\n  \"jupyter notebook\": 0xda5b0b,\n  kotlin: 0xa97bff,\n  makefile: 0x427819,\n  \"objective-c\": 0x438eff,\n  php: 0x4f5d95,\n  python: 0x3572a5,\n  ruby: 0x701516,\n  scss: 0xc6538c,\n  shell: 0x89e051,\n  swift: 0xf05138,\n  typescript: 0x3178c6,\n  vue: 0x41b883,\n};\n\n/**\n * Derived from https://gitlab.com/explore/projects.\n * Use the language dropdown to see available languages and\n * get the number map.\n */\nexport const GitLabLanguageIds: {\n  [key in Partial<keyof typeof LanguageChoices>]: number;\n} = {\n  batchfile: 30,\n  blade: 606,\n  c: 6,\n  \"c#\": 26,\n  \"c++\": 4,\n  cmake: 5,\n  css: 2,\n  dockerfile: 38,\n  go: 39,\n  hcl: 52,\n  html: 1,\n  java: 8,\n  javascript: 3,\n  \"jupyter notebook\": 13,\n  kotlin: 48,\n  makefile: 34,\n  \"objective-c\": 29,\n  php: 11,\n  python: 7,\n  ruby: 12,\n  scss: 605,\n  shell: 16,\n  swift: 28,\n  typescript: 19,\n  vue: 25,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9a8f7488a93aca5df5bf326f4c528ebc8ba45035","contentHash":"5add184a47fcf386635d2223dd6f5d98084afceb62a13b6b66f542a72bffb880"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/token.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/token.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":33,"column":2}},"4":{"start":{"line":9,"column":37},"end":{"line":12,"column":26}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":58}},"6":{"start":{"line":15,"column":22},"end":{"line":15,"column":66}},"7":{"start":{"line":16,"column":21},"end":{"line":16,"column":40}},"8":{"start":{"line":17,"column":25},"end":{"line":25,"column":32}},"9":{"start":{"line":24,"column":33},"end":{"line":24,"column":49}},"10":{"start":{"line":25,"column":28},"end":{"line":25,"column":31}},"11":{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},"12":{"start":{"line":27,"column":12},"end":{"line":27,"column":66}},"13":{"start":{"line":28,"column":12},"end":{"line":28,"column":19}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":39}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":109}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":25},"end":{"line":9,"column":26}},"loc":{"start":{"line":9,"column":37},"end":{"line":12,"column":26}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":10}},"loc":{"start":{"line":13,"column":37},"end":{"line":32,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":18},"end":{"line":24,"column":19}},"loc":{"start":{"line":24,"column":33},"end":{"line":24,"column":49}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":19},"end":{"line":25,"column":20}},"loc":{"start":{"line":25,"column":28},"end":{"line":25,"column":31}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},{"start":{"line":26,"column":8},"end":{"line":29,"column":9}}],"line":26},"1":{"loc":{"start":{"line":31,"column":79},"end":{"line":31,"column":105}},"type":"binary-expr","locations":[{"start":{"line":31,"column":79},"end":{"line":31,"column":92}},{"start":{"line":31,"column":96},"end":{"line":31,"column":105}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/token.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/commands/token.ts"],"names":[],"mappings":";;;AAAA,2CAAiD;AAIpC,QAAA,KAAK,GAAY;IAC5B,IAAI,EAAE,IAAI,gCAAmB,EAAE;SAC5B,OAAO,CAAC,OAAO,CAAC;SAChB,cAAc,CAAC,qCAAqC,CAAC;SACrD,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAC1B,MAAM;SACH,OAAO,CAAC,OAAO,CAAC;SAChB,cAAc,CAAC,gCAAgC,CAAC;SAChD,WAAW,CAAC,IAAI,CAAC,CACrB;IACH,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE;QAC9B,MAAM,WAAW,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QAElD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE3D,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;QAEjC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,wDAAwD,EACxD;YACE,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,aAAa,EAAE,UAAU,KAAK,EAAE;gBAChC,cAAc,EAAE,kBAAkB;aACnC;SACF,CACF;aACE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;aACrC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAEvB,IAAI,QAAQ,CAAC,IAAI,KAAK,oBAAoB,EAAE;YAC1C,MAAM,WAAW,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;YACtD,OAAO;SACR;QAED,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAE/B,MAAM,WAAW,CAAC,SAAS,CACzB,2CAA2C,QAAQ,CAAC,IAAI,IAAI,SAAS,EAAE,CACxE,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { SlashCommandBuilder } from \"discord.js\";\n\nimport { Command } from \"../interfaces/Command\";\n\nexport const token: Command = {\n  data: new SlashCommandBuilder()\n    .setName(\"token\")\n    .setDescription(\"Set or update your reporting token.\")\n    .addStringOption((option) =>\n      option\n        .setName(\"token\")\n        .setDescription(\"Your Hacktoberfest auth token.\")\n        .setRequired(true)\n    ),\n  run: async (bot, interaction) => {\n    await interaction.deferReply({ ephemeral: true });\n\n    const token = interaction.options.getString(\"token\", true);\n\n    const user = interaction.user.id;\n\n    const response = await fetch(\n      \"https://hackathon-tracker.digitalocean.com/users/%40me\",\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then(async (res) => await res.json())\n      .catch((err) => err);\n\n    if (response.code === \"InvalidCredentials\") {\n      await interaction.editReply(\"Your token is invalid.\");\n      return;\n    }\n\n    bot.reportTokens[user] = token;\n\n    await interaction.editReply(\n      `Your token has been set for the account ${response.name || \"unknown\"}`\n    );\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1fbf4f82ffe55d1d724e2bc34fa43f82b9ba46a1","contentHash":"e651154cbecdaf91536edb1285132cc36a8ed547bff57b4acf181cb6653c3fa4"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/IntentOptions.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/IntentOptions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":10,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/IntentOptions.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/config/IntentOptions.ts"],"names":[],"mappings":";;;AAAA,2CAA+C;AAElC,QAAA,aAAa,GAAG;IAC3B,8BAAiB,CAAC,MAAM;IACxB,8BAAiB,CAAC,aAAa;IAC/B,8BAAiB,CAAC,cAAc;IAChC,8BAAiB,CAAC,cAAc;CACjC,CAAC","sourcesContent":["import { GatewayIntentBits } from \"discord.js\";\n\nexport const IntentOptions = [\n  GatewayIntentBits.Guilds,\n  GatewayIntentBits.GuildMessages,\n  GatewayIntentBits.DirectMessages,\n  GatewayIntentBits.MessageContent,\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02ca5a64f3c9b5f49f79441c9243e6e7853dcca4","contentHash":"2fc28b1da44cab39285c580c370fa70b42218be3d948abe918a78e26bdfe4078"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/ProjectRegex.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/ProjectRegex.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":247}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":76}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":69}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":92}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":92}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":184}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/config/ProjectRegex.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/config/ProjectRegex.ts"],"names":[],"mappings":";;;AAAa,QAAA,aAAa,GAAG,kBAAkB,CAAC;AACnC,QAAA,WAAW,GAAG,uBAAuB,CAAC;AACtC,QAAA,QAAQ,GAAG,oBAAoB,CAAC;AAChC,QAAA,GAAG,GAAG,aAAa,CAAC;AACjC,0DAA0D;AAC7C,QAAA,cAAc,GACzB,kDAAkD,CAAC;AACxC,QAAA,cAAc,GAAG,2CAA2C,CAAC;AAC7D,QAAA,IAAI,GAAG,qBAAqB,CAAC;AAC7B,QAAA,cAAc,GAAG,gCAAgC,CAAC;AAElD,QAAA,UAAU,GAAG,GAAG,sBAAc,MAAM,YAAI,GAAG,sBAAc,EAAE,CAAC;AAC5D,QAAA,UAAU,GAAG,GAAG,sBAAc,MAAM,YAAI,GAAG,sBAAc,EAAE,CAAC;AAE5D,QAAA,kBAAkB,GAAG,GAAG,qBAAa,GAAG,gBAAQ,GAAG,WAAG,mBAAmB,kBAAU,iBAAiB,kBAAU,IAAI,mBAAW,EAAE,CAAC","sourcesContent":["export const boundaryStart = \"(?:^|[ \\t\\n<(])?\";\nexport const boundaryEnd = \"\\\\/?(?:$|[ \\t\\n>),.])\";\nexport const protocol = \"(?:https?:\\\\/\\\\/)?\";\nexport const www = \"(?:www\\\\.)?\";\n// credit: https://github.com/shinnn/github-username-regex\nexport const githubUsername =\n  \"(?!orgs)[a-z\\\\d](?:[a-z\\\\d]|-(?=[a-z\\\\d])){0,38}\";\nexport const gitlabUsername = \"[a-z\\\\d](?:[a-z\\\\d]|-(?=[a-z\\\\d])){1,254}\";\nexport const repo = \"[a-z\\\\d\\\\-\\\\._]{1,}\";\nexport const optionalIssues = \"(?:\\\\/(?:-\\\\/)?issues\\\\/\\\\d+)?\";\n\nexport const githubPath = `${githubUsername}\\\\/${repo}${optionalIssues}`;\nexport const gitlabPath = `${gitlabUsername}\\\\/${repo}${optionalIssues}`;\n\nexport const ProjectRegexString = `${boundaryStart}${protocol}${www}(?:github\\\\.com/${githubPath}|gitlab\\\\.com/${gitlabPath})${boundaryEnd}`;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a6d4d41c285c07b27573c746d1b163385d66c5df","contentHash":"261dc556e42c96c5dfc0f748387d4358ca2dbcf58305bad69264dcf2ba0b3970"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/hearts.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/hearts.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":36,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/hearts.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/data/hearts.ts"],"names":[],"mappings":";;;AAAa,QAAA,MAAM,GAAG;IACpB,UAAU;IACV,aAAa;IACb,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,qBAAqB;IACrB,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,eAAe;IACf,aAAa;IACb,eAAe;IACf,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,aAAa;IACb,eAAe;IACf,kBAAkB;IAClB,cAAc;IACd,aAAa;IACb,aAAa;IACb,cAAc;IACd,WAAW;IACX,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,cAAc;IACd,aAAa;IACb,aAAa;IACb,cAAc;CACf,CAAC","sourcesContent":["export const hearts = [\n  \"among_us\",\n  \"black_heart\",\n  \"blue_heart\",\n  \"canada_heart\",\n  \"deepgram_heart\",\n  \"digital_ocean_heart\",\n  \"england_heart\",\n  \"european_union_heart\",\n  \"fall_guys_heart\",\n  \"germany_heart\",\n  \"green_heart\",\n  \"hf_heart_2019\",\n  \"hf_heart_2020\",\n  \"hf_heart_2021\",\n  \"hf_pixel_heart_21\",\n  \"india_heart\",\n  \"italian_heart\",\n  \"javascript_heart\",\n  \"orange_heart\",\n  \"pixel_heart\",\n  \"pride_heart\",\n  \"purple_heart\",\n  \"red_heart\",\n  \"scotland_heart\",\n  \"trans_pride_flag\",\n  \"uk_heart\",\n  \"usa_heart\",\n  \"vonage_heart\",\n  \"wales_heart\",\n  \"white_heart\",\n  \"yellow_heart\",\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f6dc597561bbfe59f45719086420f120c206814e","contentHash":"8f41f91076f287a61ef54fd602e69f38d7a5094dfff401b5e2861e49528e02bf"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/loveData.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/loveData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":68,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/loveData.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/data/loveData.ts"],"names":[],"mappings":";;;AAEa,QAAA,QAAQ,GAAe;IAClC,gBAAgB;IAChB;QACE,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,yBAAyB;KACjC;IACD;QACE,IAAI,EAAE,eAAe;QACrB,KAAK,EAAE,2BAA2B;KACnC;IACD;QACE,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,eAAe;KACvB;IACD,WAAW;IACX;QACE,IAAI,EAAE,MAAM;QACZ,EAAE,EAAE,oBAAoB;QACxB,KAAK,EAAE,SAAS;KACjB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,EAAE,EAAE,oBAAoB;QACxB,KAAK,EAAE,SAAS;KACjB;IACD;QACE,IAAI,EAAE,OAAO;QACb,EAAE,EAAE,oBAAoB;QACxB,KAAK,EAAE,WAAW;KACnB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,EAAE,EAAE,oBAAoB;QACxB,KAAK,EAAE,aAAa;KACrB;IACD,WAAW;IACX;QACE,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,iBAAiB;KACzB;IACD;QACE,IAAI,EAAE,WAAW;QACjB,KAAK,EAAE,mBAAmB;KAC3B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,uBAAuB;KAC/B;IACD;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,WAAW;KACnB;IACD;QACE,IAAI,EAAE,YAAY;QAClB,KAAK,EAAE,qBAAqB;KAC7B;IACD;QACE,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,OAAO;KACf;IACD;QACE,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,uBAAuB;KAC/B;CACF,CAAC","sourcesContent":["import { LoveData } from \"../interfaces/LoveData\";\n\nexport const loveData: LoveData[] = [\n  // hacktoberfest\n  {\n    name: \"DigitalOcean\",\n    emoji: \"D I G I T A L O C E A N\",\n  },\n  {\n    name: \"Hacktoberfest\",\n    emoji: \"H A C K T O B E R F E S T\",\n  },\n  {\n    name: \"website\",\n    emoji: \"W E B S I T E\",\n  },\n  // mod team\n  {\n    name: \"Luke\",\n    id: \"689411893156511769\",\n    emoji: \"L U K E\",\n  },\n  {\n    name: \"Matt\",\n    id: \"541305895544422430\",\n    emoji: \"M A T T\",\n  },\n  {\n    name: \"Naomi\",\n    id: \"465650873650118659\",\n    emoji: \"N A O M I\",\n  },\n  {\n    name: \"Walshy\",\n    id: \"453920106498621451\",\n    emoji: \"W A L S H Y\",\n  },\n  // sponsors\n  {\n    name: \"Appwrite\",\n    emoji: \"A P P W R I T E\",\n  },\n  {\n    name: \"IllaCloud\",\n    emoji: \"I L L A C L O U D\",\n  },\n  {\n    name: \"Amplication\",\n    emoji: \"A M P L I C A T I O N\",\n  },\n  {\n    name: \"Runme\",\n    emoji: \"R U N M E\",\n  },\n  {\n    name: \"OpenSauced\",\n    emoji: \"O P E N S A U C E D\",\n  },\n  {\n    name: \"MLH\",\n    emoji: \"M L H\",\n  },\n  {\n    name: \"HuggingFace\",\n    emoji: \"H U G G I N G F A C E\",\n  },\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ceecd1e569909ea0c00b8e7612c4364dc357304c","contentHash":"ff657cb2c96387d0909d25b8a0fd8a47cf05c0db14424e10d1b16c539ba08dc3"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/phrases.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/phrases.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":32,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/data/phrases.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/data/phrases.ts"],"names":[],"mappings":";;;AAAa,QAAA,OAAO,GAAG;IACrB,iBAAiB;IACjB,oBAAoB;IACpB,qBAAqB;IACrB,kBAAkB;IAClB,yBAAyB;IACzB,uBAAuB;IACvB,wBAAwB;IACxB,uBAAuB;IACvB,wBAAwB;IACxB,uBAAuB;IACvB,0BAA0B;IAC1B,wBAAwB;IACxB,uBAAuB;IACvB,qBAAqB;IACrB,sBAAsB;IACtB,qBAAqB;IACrB,yBAAyB;IACzB,sBAAsB;IACtB,sBAAsB;IACtB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB;IAChB,qBAAqB;IACrB,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,sBAAsB;CACvB,CAAC","sourcesContent":["export const phrases = [\n  \"We Love {name}!\",\n  \"{name} is Awesome!\",\n  \"{name} is the Best!\",\n  \"All hail {name}!\",\n  \"{name} is sooo Amazing!\",\n  \"{name} is Astounding!\",\n  \"{name} is Astonishing!\",\n  \"{name} is Remarkable!\",\n  \"{name} is Spectacular!\",\n  \"{name} is Incredible!\",\n  \"{name} is Extraordinary!\",\n  \"{name} is Sensational!\",\n  \"{name} is Marvellous!\",\n  \"{name} is a Genius!\",\n  \"{name} is Wonderful!\",\n  \"{name} is Majestic!\",\n  \"{name} is Mind-blowing!\",\n  \"{name} is Thrilling!\",\n  \"{name} is Fantastic!\",\n  \"{name} is Terrific!\",\n  \"{name} is Epic!\",\n  \"{name} is Pog!\",\n  \"{name} is soo Cool!\",\n  \"{name} is Legendary!\",\n  \"{name} is 11/10!\",\n  \"{name} is Superb!\",\n  \"{name} is Wholesome!\",\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5070a22f5be9abea989f86ed3ae962ea6b25e19a","contentHash":"558444f24f7761f1c5125bde7c67d3d4d89d1a3d8fba813ae61629c3dd1219ec"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onInteractionCreate.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onInteractionCreate.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":28},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":50}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":38}},"6":{"start":{"line":14,"column":22},"end":{"line":49,"column":1}},"7":{"start":{"line":15,"column":4},"end":{"line":40,"column":5}},"8":{"start":{"line":16,"column":8},"end":{"line":28,"column":9}},"9":{"start":{"line":17,"column":27},"end":{"line":17,"column":63}},"10":{"start":{"line":18,"column":12},"end":{"line":27,"column":13}},"11":{"start":{"line":19,"column":38},"end":{"line":19,"column":81}},"12":{"start":{"line":20,"column":31},"end":{"line":20,"column":43}},"13":{"start":{"line":21,"column":32},"end":{"line":25,"column":32}},"14":{"start":{"line":22,"column":36},"end":{"line":24,"column":24}},"15":{"start":{"line":26,"column":16},"end":{"line":26,"column":93}},"16":{"start":{"line":26,"column":74},"end":{"line":26,"column":89}},"17":{"start":{"line":29,"column":8},"end":{"line":39,"column":9}},"18":{"start":{"line":30,"column":27},"end":{"line":30,"column":63}},"19":{"start":{"line":31,"column":12},"end":{"line":38,"column":13}},"20":{"start":{"line":32,"column":33},"end":{"line":32,"column":71}},"21":{"start":{"line":32,"column":58},"end":{"line":32,"column":70}},"22":{"start":{"line":33,"column":31},"end":{"line":33,"column":57}},"23":{"start":{"line":34,"column":32},"end":{"line":36,"column":32}},"24":{"start":{"line":35,"column":36},"end":{"line":35,"column":154}},"25":{"start":{"line":37,"column":16},"end":{"line":37,"column":102}},"26":{"start":{"line":37,"column":67},"end":{"line":37,"column":98}},"27":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"28":{"start":{"line":42,"column":23},"end":{"line":42,"column":100}},"29":{"start":{"line":42,"column":54},"end":{"line":42,"column":99}},"30":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"31":{"start":{"line":44,"column":12},"end":{"line":44,"column":91}},"32":{"start":{"line":45,"column":12},"end":{"line":45,"column":19}},"33":{"start":{"line":47,"column":8},"end":{"line":47,"column":43}},"34":{"start":{"line":50,"column":0},"end":{"line":50,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":22},"end":{"line":14,"column":23}},"loc":{"start":{"line":14,"column":50},"end":{"line":49,"column":1}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":26},"end":{"line":22,"column":27}},"loc":{"start":{"line":22,"column":36},"end":{"line":24,"column":24}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":54},"end":{"line":26,"column":55}},"loc":{"start":{"line":26,"column":74},"end":{"line":26,"column":89}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":49},"end":{"line":32,"column":50}},"loc":{"start":{"line":32,"column":58},"end":{"line":32,"column":70}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":26},"end":{"line":35,"column":27}},"loc":{"start":{"line":35,"column":36},"end":{"line":35,"column":154}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":54},"end":{"line":37,"column":55}},"loc":{"start":{"line":37,"column":67},"end":{"line":37,"column":98}},"line":37},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":41},"end":{"line":42,"column":42}},"loc":{"start":{"line":42,"column":54},"end":{"line":42,"column":99}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":40,"column":5}},{"start":{"line":15,"column":4},"end":{"line":40,"column":5}}],"line":15},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":28,"column":9}},{"start":{"line":16,"column":8},"end":{"line":28,"column":9}}],"line":16},"2":{"loc":{"start":{"line":18,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":27,"column":13}},{"start":{"line":18,"column":12},"end":{"line":27,"column":13}}],"line":18},"3":{"loc":{"start":{"line":22,"column":36},"end":{"line":24,"column":24}},"type":"cond-expr","locations":[{"start":{"line":23,"column":22},"end":{"line":23,"column":23}},{"start":{"line":24,"column":22},"end":{"line":24,"column":24}}],"line":22},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":39,"column":9}},{"start":{"line":29,"column":8},"end":{"line":39,"column":9}}],"line":29},"5":{"loc":{"start":{"line":31,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":38,"column":13}},{"start":{"line":31,"column":12},"end":{"line":38,"column":13}}],"line":31},"6":{"loc":{"start":{"line":35,"column":36},"end":{"line":35,"column":154}},"type":"cond-expr","locations":[{"start":{"line":35,"column":148},"end":{"line":35,"column":149}},{"start":{"line":35,"column":152},"end":{"line":35,"column":154}}],"line":35},"7":{"loc":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},{"start":{"line":41,"column":4},"end":{"line":48,"column":5}}],"line":41},"8":{"loc":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},{"start":{"line":43,"column":8},"end":{"line":46,"column":9}}],"line":43}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onInteractionCreate.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onInteractionCreate.ts"],"names":[],"mappings":";;;AAAA,2CAA0D;AAC1D,yDAAsD;AAEtD,mDAAsD;AACtD,uCAAoC;AAGpC;;;;;GAKG;AACI,MAAM,aAAa,GAAG,KAAK,EAAE,GAAQ,EAAE,WAAwB,EAAE,EAAE;IACxE,IAAI,WAAW,CAAC,IAAI,KAAK,4BAAe,CAAC,8BAA8B,EAAE;QACvE,IAAI,WAAW,CAAC,WAAW,KAAK,QAAQ,EAAE;YACxC,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEpD,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;gBAC1B,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,2BAAe,CAAC,CAAC;gBACtD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC5B,MAAM,OAAO,GAAG,aAAa;qBAC1B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CACb,IAAA,qCAAiB,EAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,IAAA,qCAAiB,EAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;oBAC/D,CAAC,CAAC,CAAC;oBACH,CAAC,CAAC,CAAC,CAAC,CACP;qBACA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACf,MAAM,WAAW,CAAC,OAAO,CACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAClD,CAAC;aACH;SACF;QACD,IAAI,WAAW,CAAC,WAAW,KAAK,KAAK,EAAE;YACrC,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEpD,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC9B,MAAM,QAAQ,GAAG,WAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACjD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC1C,MAAM,OAAO,GAAG,QAAQ;qBACrB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CACb,IAAA,qCAAiB,EAAC,CAAC,EAAE,MAAM,CAAC,GAAG,IAAA,qCAAiB,EAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrE;qBACA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACf,MAAM,WAAW,CAAC,OAAO,CACvB,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAC3D,CAAC;aACH;SACF;KACF;IACD,IAAI,WAAW,CAAC,kBAAkB,EAAE,EAAE;QACpC,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAC9B,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,WAAW,CAC3D,CAAC;QACF,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,WAAW,CAAC,KAAK,CACrB,qDAAqD,CACtD,CAAC;YACF,OAAO;SACR;QACD,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;KACpC;AACH,CAAC,CAAC;AAjDW,QAAA,aAAa,iBAiDxB","sourcesContent":["import { Interaction, InteractionType } from \"discord.js\";\nimport { compareTwoStrings } from \"string-similarity\";\n\nimport { LanguageChoices } from \"../config/Languages\";\nimport { tags } from \"../data/tags\";\nimport { Bot } from \"../interfaces/Bot\";\n\n/**\n * Handles the interaction events from Discord.\n *\n * @param {Bot} bot The bot's Discord instance.\n * @param {Interaction} interaction The interaction payload from Discord.\n */\nexport const onInteraction = async (bot: Bot, interaction: Interaction) => {\n  if (interaction.type === InteractionType.ApplicationCommandAutocomplete) {\n    if (interaction.commandName === \"search\") {\n      const option = interaction.options.getFocused(true);\n\n      if (option.name === \"lang\") {\n        const languageNames = Object.entries(LanguageChoices);\n        const search = option.value;\n        const choices = languageNames\n          .sort((a, b) =>\n            compareTwoStrings(b[1], search) > compareTwoStrings(a[1], search)\n              ? 1\n              : -1\n          )\n          .slice(0, 5);\n        await interaction.respond(\n          choices.map(([value, name]) => ({ name, value }))\n        );\n      }\n    }\n    if (interaction.commandName === \"faq\") {\n      const option = interaction.options.getFocused(true);\n\n      if (option.name === \"question\") {\n        const tagNames = tags.map((tag) => tag.question);\n        const search = option.value.toLowerCase();\n        const choices = tagNames\n          .sort((a, b) =>\n            compareTwoStrings(b, search) > compareTwoStrings(a, search) ? 1 : -1\n          )\n          .slice(0, 5);\n        await interaction.respond(\n          choices.map((choice) => ({ name: choice, value: choice }))\n        );\n      }\n    }\n  }\n  if (interaction.isChatInputCommand()) {\n    const target = bot.commands.find(\n      (command) => command.data.name === interaction.commandName\n    );\n    if (!target) {\n      await interaction.reply(\n        \"That does not appear to be a valid slash command...\"\n      );\n      return;\n    }\n    await target.run(bot, interaction);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1e4d840daf2e702f5bd8fe82b67b021be49b99f1","contentHash":"1bb0b9314e056858e1b9aae233814c65c6fe19c343abb072657547e0ab9515fb"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessage.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessage.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":49}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":55}},"5":{"start":{"line":13,"column":18},"end":{"line":24,"column":1}},"6":{"start":{"line":14,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":19}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":56}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":71}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":69}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":18},"end":{"line":13,"column":19}},"loc":{"start":{"line":13,"column":45},"end":{"line":24,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessage.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessage.ts"],"names":[],"mappings":";;;AAGA,0DAAuD;AACvD,kDAA+C;AAC/C,wDAAqD;AAErD;;;;;GAKG;AACI,MAAM,SAAS,GAAG,KAAK,EAC5B,OAAgB,EAChB,MAAW,EACI,EAAE;IACjB,IAAI;QACF,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE;YACzC,OAAO;SACR;QAED,MAAM,IAAA,mBAAQ,EAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAEhC,MAAM,IAAA,2BAAY,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;KAC5C;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,eAAe,EAAE,GAAG,CAAC,CAAC;KAC1C;AACH,CAAC,CAAC;AAfW,QAAA,SAAS,aAepB","sourcesContent":["import { Message } from \"discord.js\";\n\nimport { Bot } from \"../interfaces/Bot\";\nimport { checkProject } from \"../modules/checkProject\";\nimport { sendLove } from \"../modules/sendLove\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\n/**\n * Handles the message event.\n *\n * @param {Message} message The message object.\n * @param {Bot} client The client object.\n */\nexport const onMessage = async (\n  message: Message,\n  client: Bot\n): Promise<void> => {\n  try {\n    if (message.author.id === client.user?.id) {\n      return;\n    }\n\n    await sendLove(client, message);\n\n    await checkProject(client, message, false);\n  } catch (err) {\n    await errorHandler(\"message event\", err);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b99b1ad1888d942dd62c5cd33484a5c04cf82258","contentHash":"2b84aa6cbd7493bfcd8123888293d4ce5a8bfafb12f4f19843050058be249d6f"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkProject.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkProject.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":27},"end":{"line":7,"column":56}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":25}},"7":{"start":{"line":17,"column":21},"end":{"line":74,"column":1}},"8":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":15}},"10":{"start":{"line":21,"column":31},"end":{"line":21,"column":38}},"11":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":15}},"13":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":15}},"15":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":15}},"17":{"start":{"line":32,"column":15},"end":{"line":33,"column":64}},"18":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":15}},"20":{"start":{"line":40,"column":25},"end":{"line":40,"column":77}},"21":{"start":{"line":41,"column":20},"end":{"line":41,"column":55}},"22":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":31}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":228}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":58}},"26":{"start":{"line":45,"column":31},"end":{"line":45,"column":51}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":15}},"28":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":31}},"30":{"start":{"line":50,"column":22},"end":{"line":50,"column":144}},"31":{"start":{"line":51,"column":8},"end":{"line":51,"column":58}},"32":{"start":{"line":51,"column":31},"end":{"line":51,"column":51}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":15}},"34":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":15}},"36":{"start":{"line":60,"column":25},"end":{"line":62,"column":100}},"37":{"start":{"line":61,"column":20},"end":{"line":61,"column":63}},"38":{"start":{"line":62,"column":29},"end":{"line":62,"column":99}},"39":{"start":{"line":62,"column":52},"end":{"line":62,"column":92}},"40":{"start":{"line":63,"column":25},"end":{"line":63,"column":30}},"41":{"start":{"line":64,"column":4},"end":{"line":73,"column":5}},"42":{"start":{"line":65,"column":21},"end":{"line":65,"column":59}},"43":{"start":{"line":66,"column":28},"end":{"line":66,"column":80}},"44":{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},"45":{"start":{"line":68,"column":12},"end":{"line":68,"column":34}},"46":{"start":{"line":69,"column":12},"end":{"line":69,"column":35}},"47":{"start":{"line":70,"column":26},"end":{"line":70,"column":209}},"48":{"start":{"line":71,"column":12},"end":{"line":71,"column":62}},"49":{"start":{"line":71,"column":35},"end":{"line":71,"column":55}},"50":{"start":{"line":75,"column":0},"end":{"line":75,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":21},"end":{"line":17,"column":22}},"loc":{"start":{"line":17,"column":58},"end":{"line":74,"column":1}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":45,"column":19},"end":{"line":45,"column":20}},"loc":{"start":{"line":45,"column":31},"end":{"line":45,"column":51}},"line":45},"2":{"name":"(anonymous_2)","decl":{"start":{"line":51,"column":19},"end":{"line":51,"column":20}},"loc":{"start":{"line":51,"column":31},"end":{"line":51,"column":51}},"line":51},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":13},"end":{"line":61,"column":14}},"loc":{"start":{"line":61,"column":20},"end":{"line":61,"column":63}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":16},"end":{"line":62,"column":17}},"loc":{"start":{"line":62,"column":29},"end":{"line":62,"column":99}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":45},"end":{"line":62,"column":46}},"loc":{"start":{"line":62,"column":52},"end":{"line":62,"column":92}},"line":62},"6":{"name":"(anonymous_6)","decl":{"start":{"line":71,"column":23},"end":{"line":71,"column":24}},"loc":{"start":{"line":71,"column":35},"end":{"line":71,"column":55}},"line":71}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18},"1":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"2":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":14}},{"start":{"line":22,"column":18},"end":{"line":22,"column":26}}],"line":22},"3":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"4":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"5":{"loc":{"start":{"line":32,"column":15},"end":{"line":33,"column":64}},"type":"binary-expr","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":67}},{"start":{"line":33,"column":9},"end":{"line":33,"column":63}}],"line":32},"6":{"loc":{"start":{"line":32,"column":39},"end":{"line":32,"column":66}},"type":"binary-expr","locations":[{"start":{"line":32,"column":39},"end":{"line":32,"column":54}},{"start":{"line":32,"column":58},"end":{"line":32,"column":66}}],"line":32},"7":{"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":62}},"type":"binary-expr","locations":[{"start":{"line":33,"column":35},"end":{"line":33,"column":50}},{"start":{"line":33,"column":54},"end":{"line":33,"column":62}}],"line":33},"8":{"loc":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},{"start":{"line":34,"column":4},"end":{"line":39,"column":5}}],"line":34},"9":{"loc":{"start":{"line":34,"column":8},"end":{"line":37,"column":65}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":11}},{"start":{"line":35,"column":8},"end":{"line":37,"column":65}}],"line":34},"10":{"loc":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},{"start":{"line":42,"column":4},"end":{"line":47,"column":5}}],"line":42},"11":{"loc":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},{"start":{"line":48,"column":4},"end":{"line":53,"column":5}}],"line":48},"12":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{"line":57,"column":4},"end":{"line":59,"column":5}}],"line":57},"13":{"loc":{"start":{"line":62,"column":52},"end":{"line":62,"column":92}},"type":"binary-expr","locations":[{"start":{"line":62,"column":52},"end":{"line":62,"column":69}},{"start":{"line":62,"column":73},"end":{"line":62,"column":92}}],"line":62},"14":{"loc":{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},{"start":{"line":67,"column":8},"end":{"line":72,"column":9}}],"line":67},"15":{"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":42}},"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":23}},{"start":{"line":67,"column":27},"end":{"line":67,"column":42}}],"line":67}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkProject.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkProject.ts"],"names":[],"mappings":";;;AAAA,2CAIoB;AAEpB,yDAA4D;AAG5D,iDAA8C;AAC9C,yDAAsD;AAEtD,YAAY;AACZ,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1B;;;;;;GAMG;AACI,MAAM,YAAY,GAAG,KAAK,EAC/B,MAAW,EACX,OAAgB,EAChB,QAAiB,EACjB,EAAE;IACF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;QAChC,OAAO;KACR;IACD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IACnC,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;QACtB,OAAO;KACR;IAED,IAAI,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;QAC9C,OAAO;KACR;IAED,gEAAgE;IAChE,IAAI,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE;QACzD,OAAO;KACR;IAED,MAAM,EAAE,GACN,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,QAAQ,CAAC;QACpD,CAAC,MAAM,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;IAC3D,IACE,CAAC,EAAE;QACH,CAAC,EAAE;aACA,aAAa,CAAC,OAAiC,CAAC;aAChD,GAAG,CAAC,gCAAmB,CAAC,cAAc,CAAC,EAC1C;QACA,OAAO;KACR;IAED,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,iCAAkB,EAAE,KAAK,CAAC,CAAC;IAE3D,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAEpD,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC;QACvB,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CACtC,MAAM,OAAO,CAAC,MAAM,CAAC,EAAE,2JAA2J,CACnL,CAAC;QACF,UAAU,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;QAClD,OAAO;KACR;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACtB,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC;QACvB,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CACtC,MAAM,OAAO,CAAC,MAAM,CAAC,EAAE,uEAAuE,CAC/F,CAAC;QACF,UAAU,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;QAClD,OAAO;KACR;IAED,oDAAoD;IACpD,qFAAqF;IACrF,0CAA0C;IAC1C,IAAI,QAAQ,EAAE;QACZ,OAAO;KACR;IAED,MAAM,YAAY,GAAG,OAAO;SACzB,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAA,mCAAgB,EAAC,CAAC,CAAC,CAAC;SAC/B,MAAM,CACL,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CACV,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CACzE,CAAC;IACJ,IAAI,cAAc,GAAG,KAAK,CAAC;IAC3B,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;QAC/B,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;QACpD,MAAM,WAAW,GAAG,MAAM,IAAA,2BAAY,EAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,WAAW,IAAI,CAAC,cAAc,EAAE;YAClC,cAAc,GAAG,IAAI,CAAC;YACtB,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC;YACvB,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CACtC,MAAM,OAAO,CAAC,MAAM,CAAC,EAAE,oIAAoI,CAC5J,CAAC;YACF,UAAU,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;SACnD;KACF;AACH,CAAC,CAAC;AAlFW,QAAA,YAAY,gBAkFvB","sourcesContent":["import {\n  GuildChannelResolvable,\n  Message,\n  PermissionFlagsBits,\n} from \"discord.js\";\n\nimport { ProjectRegexString } from \"../config/ProjectRegex\";\nimport { Bot } from \"../interfaces/Bot\";\n\nimport { isInDatabase } from \"./isInDatabase\";\nimport { parseProjectLink } from \"./parseProjectLink\";\n\n// 5 minutes\nconst TTD = 1000 * 60 * 5;\n\n/**\n * Checks if a message in the project channel includes a valid GitHub/GitLab link.\n *\n * @param {Bot} client The bot's Discord instance.\n * @param {Message} message The message payload from Discord.\n * @param {boolean} isEdited If this was an edited message (rather than a created message).\n */\nexport const checkProject = async (\n  client: Bot,\n  message: Message,\n  isEdited: boolean\n) => {\n  if (!process.env.PROJECT_CHANNEL) {\n    return;\n  }\n  const { guild, channel } = message;\n  if (!guild || !channel) {\n    return;\n  }\n\n  if (channel.id !== process.env.PROJECT_CHANNEL) {\n    return;\n  }\n\n  // ignoring helpers to allow us to reply to messages when needed\n  if (message.member?.roles.cache.has(\"735507717233573964\")) {\n    return;\n  }\n\n  const me =\n    guild.members.cache.get(client.user?.id || \"oopsie\") ||\n    (await guild.members.fetch(client.user?.id || \"oopsie\"));\n  if (\n    !me ||\n    !me\n      .permissionsIn(channel as GuildChannelResolvable)\n      .has(PermissionFlagsBits.ManageMessages)\n  ) {\n    return;\n  }\n\n  const ProjectRegex = new RegExp(ProjectRegexString, \"mig\");\n\n  const matches = message.content.match(ProjectRegex);\n\n  if (!matches) {\n    await message.delete();\n    const notif = await message.channel.send(\n      `<@!${message.author.id}>, please don't post in this channel if you aren't sharing a project. Make sure you're sharing a GitHub/GitLab repository link, or a specific issue link.`\n    );\n    setTimeout(async () => await notif.delete(), TTD);\n    return;\n  }\n\n  if (matches.length > 5) {\n    await message.delete();\n    const notif = await message.channel.send(\n      `<@!${message.author.id}>, please don't post many links at once, as this can be quite spammy.`\n    );\n    setTimeout(async () => await notif.delete(), TTD);\n    return;\n  }\n\n  // we don't run the database logic on message edits.\n  // theoretically this means someone could abuse the system by editing a repo link in,\n  // but then we'll just ban them forever :3\n  if (isEdited) {\n    return;\n  }\n\n  const matchedRepos = matches\n    .map((m) => parseProjectLink(m))\n    .filter(\n      (m, i, a) =>\n        a.findLastIndex((x) => x.repo === m.repo && x.owner === m.owner) === i\n    );\n  let existsNotified = false;\n  for (const data of matchedRepos) {\n    const opts = { ...data, userId: message.author.id };\n    const alreadySent = await isInDatabase(client, opts);\n    if (alreadySent && !existsNotified) {\n      existsNotified = true;\n      await message.delete();\n      const notif = await message.channel.send(\n        `<@!${message.author.id}>, please do not share your project repeatedly. This channel is searchable, so there is no need to clog it up with multiple posts.`\n      );\n      setTimeout(async () => await notif.delete(), TTD);\n    }\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4e79a5eeed010fa860a1b2721ce9436298dd1319","contentHash":"1819757a59d9057cd24849739904ebbc98682e8186604244edbc47672095d3dd"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/isInDatabase.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/isInDatabase.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":41}},"4":{"start":{"line":14,"column":21},"end":{"line":46,"column":1}},"5":{"start":{"line":15,"column":4},"end":{"line":45,"column":5}},"6":{"start":{"line":16,"column":23},"end":{"line":20,"column":10}},"7":{"start":{"line":21,"column":8},"end":{"line":36,"column":9}},"8":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"9":{"start":{"line":24,"column":16},"end":{"line":24,"column":28}},"10":{"start":{"line":27,"column":12},"end":{"line":34,"column":15}},"11":{"start":{"line":35,"column":12},"end":{"line":35,"column":25}},"12":{"start":{"line":37,"column":8},"end":{"line":39,"column":11}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":21}},"14":{"start":{"line":43,"column":8},"end":{"line":43,"column":68}},"15":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"16":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":45},"end":{"line":46,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":36,"column":9}},{"start":{"line":21,"column":8},"end":{"line":36,"column":9}}],"line":21},"1":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},{"start":{"line":23,"column":12},"end":{"line":25,"column":13}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/isInDatabase.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/isInDatabase.ts"],"names":[],"mappings":";;;AACA,wDAAqD;AAQrD,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1C;;;;;;;GAOG;AACI,MAAM,YAAY,GAAG,KAAK,EAC/B,MAAW,EACX,IAAY,EACa,EAAE;IAC3B,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC;YAC9C,KAAK,EAAE;gBACL,iBAAiB,EAAE,IAAI;aACxB;SACF,CAAC,CAAC;QACH,IAAI,MAAM,EAAE;YACV,wEAAwE;YACxE,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;gBACtD,OAAO,IAAI,CAAC;aACb;YACD,sEAAsE;YACtE,MAAM,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC3B,KAAK,EAAE;oBACL,iBAAiB,EAAE,IAAI;iBACxB;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI,IAAI,EAAE;iBACrB;aACF,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QACD,MAAM,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;YAC3B,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;KACd;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,cAAc,EAAE,GAAG,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAlCW,QAAA,YAAY,gBAkCvB","sourcesContent":["import { Bot } from \"../interfaces/Bot\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\ninterface params {\n  repo: string;\n  owner: string;\n  userId: string;\n}\n\nconst threeDays = 1000 * 60 * 60 * 24 * 3;\n\n/**\n * Checks if the database contains the specified project for the user.\n * Creates it if not.\n *\n * @param {Bot} client The bot's Discord instance.\n * @param {params} opts The userId, repo, and owner.\n * @returns {boolean} True if already present, false if not. Null on error.\n */\nexport const isInDatabase = async (\n  client: Bot,\n  opts: params\n): Promise<boolean | null> => {\n  try {\n    const exists = await client.db.links.findUnique({\n      where: {\n        userId_repo_owner: opts,\n      },\n    });\n    if (exists) {\n      // return true only if exists and hasn't been three days since last sent\n      if (exists.lastSent.getTime() + threeDays > Date.now()) {\n        return true;\n      }\n      // need to update here, create call would fail because of unique index\n      await client.db.links.update({\n        where: {\n          userId_repo_owner: opts,\n        },\n        data: {\n          lastSent: new Date(),\n        },\n      });\n      return false;\n    }\n    await client.db.links.create({\n      data: opts,\n    });\n    return false;\n  } catch (err) {\n    await errorHandler(\"isInDatabase\", err);\n    return null;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"51530bd1017491639082d16b8ae130e0033f7b02","contentHash":"1d63f45480226178d421004e0035bc15fad76262499cdbb6506fd459e20662f4"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/parseProjectLink.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/parseProjectLink.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":56}},"3":{"start":{"line":11,"column":25},"end":{"line":22,"column":1}},"4":{"start":{"line":12,"column":21},"end":{"line":17,"column":27}},"5":{"start":{"line":18,"column":18},"end":{"line":18,"column":37}},"6":{"start":{"line":19,"column":17},"end":{"line":19,"column":28}},"7":{"start":{"line":20,"column":18},"end":{"line":20,"column":29}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":68}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":38},"end":{"line":22,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":37}},"type":"binary-expr","locations":[{"start":{"line":21,"column":19},"end":{"line":21,"column":31}},{"start":{"line":21,"column":35},"end":{"line":21,"column":37}}],"line":21},"1":{"loc":{"start":{"line":21,"column":46},"end":{"line":21,"column":65}},"type":"binary-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":65}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":19,"5":19,"6":19,"7":19,"8":19,"9":1},"f":{"0":19},"b":{"0":[19,0],"1":[19,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/parseProjectLink.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/parseProjectLink.ts"],"names":[],"mappings":";;;AAAA,yDAIgC;AAEhC;;;;;GAKG;AACI,MAAM,gBAAgB,GAAG,CAC9B,OAAe,EACkB,EAAE;IACnC,MAAM,QAAQ,GAAG,OAAO;SACrB,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,4BAAa,EAAE,CAAC,EAAE,EAAE,CAAC;SAC5C,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,0BAAW,GAAG,CAAC,EAAE,EAAE,CAAC;SAC1C,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,6BAAc,GAAG,CAAC,EAAE,EAAE,CAAC;SAC7C,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACtB,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACzB,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IAC1B,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;AAClE,CAAC,CAAC;AAbW,QAAA,gBAAgB,oBAa3B","sourcesContent":["import {\n  boundaryEnd,\n  boundaryStart,\n  optionalIssues,\n} from \"../config/ProjectRegex\";\n\n/**\n * Parses the repository and owner from a project link.\n *\n * @param {string} message The match content from the ProjectRegex.match call.\n * @returns {{ repo: string; owner: string }} The repository and owner.\n */\nexport const parseProjectLink = (\n  message: string\n): { repo: string; owner: string } => {\n  const stripped = message\n    .replace(new RegExp(`^${boundaryStart}`), \"\")\n    .replace(new RegExp(`${boundaryEnd}$`), \"\")\n    .replace(new RegExp(`${optionalIssues}$`), \"\")\n    .replace(/\\.$/, \"\")\n    .replace(/\\/$/, \"\");\n  const split = stripped.split(\"/\");\n  const repo = split.pop();\n  const owner = split.pop();\n  return { repo: repo?.trim() || \"\", owner: owner?.trim() || \"\" };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"59cf115d1e544b0c3f99d816275559a750d138ce","contentHash":"65d2da4ce5a07bd8f3fd46cffd73db0d71fae18eea380b7f8b8746d273530e9e"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/sendLove.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/sendLove.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":46}},"5":{"start":{"line":7,"column":18},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":23},"end":{"line":8,"column":55}},"7":{"start":{"line":9,"column":20},"end":{"line":9,"column":42}},"8":{"start":{"line":10,"column":23},"end":{"line":10,"column":48}},"9":{"start":{"line":17,"column":17},"end":{"line":53,"column":1}},"10":{"start":{"line":18,"column":4},"end":{"line":52,"column":5}},"11":{"start":{"line":20,"column":8},"end":{"line":27,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"13":{"start":{"line":22,"column":16},"end":{"line":22,"column":23}},"14":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"15":{"start":{"line":25,"column":16},"end":{"line":25,"column":23}},"16":{"start":{"line":28,"column":26},"end":{"line":28,"column":28}},"17":{"start":{"line":29,"column":20},"end":{"line":29,"column":25}},"18":{"start":{"line":30,"column":8},"end":{"line":35,"column":9}},"19":{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},"20":{"start":{"line":32,"column":16},"end":{"line":32,"column":107}},"21":{"start":{"line":33,"column":16},"end":{"line":33,"column":29}},"22":{"start":{"line":36,"column":8},"end":{"line":48,"column":9}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":38}},"24":{"start":{"line":38,"column":26},"end":{"line":38,"column":57}},"25":{"start":{"line":39,"column":12},"end":{"line":39,"column":47}},"26":{"start":{"line":40,"column":12},"end":{"line":40,"column":55}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":152}},"28":{"start":{"line":42,"column":12},"end":{"line":45,"column":15}},"29":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"30":{"start":{"line":47,"column":12},"end":{"line":47,"column":60}},"31":{"start":{"line":51,"column":8},"end":{"line":51,"column":65}},"32":{"start":{"line":54,"column":0},"end":{"line":54,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":17},"end":{"line":17,"column":18}},"loc":{"start":{"line":17,"column":44},"end":{"line":53,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":27,"column":9}},{"start":{"line":20,"column":8},"end":{"line":27,"column":9}}],"line":20},"1":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21},"2":{"loc":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},{"start":{"line":24,"column":12},"end":{"line":26,"column":13}}],"line":24},"3":{"loc":{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},{"start":{"line":31,"column":12},"end":{"line":34,"column":13}}],"line":31},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":48,"column":9}},{"start":{"line":36,"column":8},"end":{"line":48,"column":9}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/sendLove.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/sendLove.ts"],"names":[],"mappings":";;;AAAA,2CAAmD;AAEnD,2CAAwC;AACxC,+CAA4C;AAC5C,6CAA0C;AAE1C,wDAAqD;AAErD,2CAAwC;AACxC,iDAA8C;AAE9C;;;;;GAKG;AACI,MAAM,QAAQ,GAAG,KAAK,EAC3B,MAAW,EACX,OAAgB,EACD,EAAE;IACjB,IAAI;QACF,mEAAmE;QACnE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE;YAC1C,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAChD,OAAO;aACR;YAED,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,KAAK,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE;gBACrD,OAAO;aACR;SACF;QAED,MAAM,SAAS,GAAa,EAAE,CAAC;QAC/B,IAAI,KAAK,GAAG,KAAK,CAAC;QAElB,KAAK,MAAM,IAAI,IAAI,mBAAQ,EAAE;YAC3B,IAAI,IAAA,2BAAY,EAAC,OAAO,EAAE,IAAI,CAAC,EAAE;gBAC/B,SAAS,CAAC,IAAI,CAAC,IAAA,qBAAS,EAAC,iBAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChE,KAAK,GAAG,IAAI,CAAC;aACd;SACF;QAED,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC1B,MAAM,KAAK,GAAG,IAAI,yBAAY,EAAE,CAAC;YACjC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YACnC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3C,KAAK,CAAC,YAAY,CAChB,sEAAsE,IAAA,qBAAS,EAC7E,eAAM,CACP,MAAM,CACR,CAAC;YACF,KAAK,CAAC,SAAS,CAAC;gBACd,IAAI,EAAE,8CAA8C;gBACpD,OAAO,EAAE,wCAAwC;aAClD,CAAC,CAAC;YACH,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACjD;KACF;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,WAAW,EAAE,GAAG,CAAC,CAAC;KACtC;AACH,CAAC,CAAC;AA9CW,QAAA,QAAQ,YA8CnB","sourcesContent":["import { EmbedBuilder, Message } from \"discord.js\";\n\nimport { hearts } from \"../data/hearts\";\nimport { loveData } from \"../data/loveData\";\nimport { phrases } from \"../data/phrases\";\nimport { Bot } from \"../interfaces/Bot\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\nimport { getRandom } from \"./getRandom\";\nimport { validateLove } from \"./validateLove\";\n\n/**\n * Logic to respond to valid messages with love.\n *\n * @param {Bot} client The bot's discord instance.\n * @param {Message} message The discord message payload.\n */\nexport const sendLove = async (\n  client: Bot,\n  message: Message\n): Promise<void> => {\n  try {\n    // Bypass these restrictions in an explicit development environment\n    if (process.env.NODE_ENV !== \"development\") {\n      if (Date.now() - client.timer <= client.cooldown) {\n        return;\n      }\n\n      if (process.env.TARGET_CHANNEL !== message.channel.id) {\n        return;\n      }\n    }\n\n    const responses: string[] = [];\n    let toSay = false;\n\n    for (const love of loveData) {\n      if (validateLove(message, love)) {\n        responses.push(getRandom(phrases).replace(\"{name}\", love.name));\n        toSay = true;\n      }\n    }\n\n    if (toSay) {\n      client.timer = Date.now();\n      const embed = new EmbedBuilder();\n      embed.setTitle(\"Spread the Love!\");\n      embed.setDescription(responses.join(\"\\n\"));\n      embed.setThumbnail(\n        `https://raw.githubusercontent.com/lukeocodes/dev-hearts/main/build/${getRandom(\n          hearts\n        )}.png`\n      );\n      embed.setFooter({\n        text: \"Join our server: https://chat.nhcarrigan.com\",\n        iconURL: \"https://cdn.nhcarrigan.com/profile.png\",\n      });\n      await message.react(\"💜\");\n      await message.channel.send({ embeds: [embed] });\n    }\n  } catch (err) {\n    await errorHandler(\"send love\", err);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5aa09d6dc0ca548339c8ad12b3cda0814e414cd2","contentHash":"2703bba6776bb77bf2b09d7818f7d26155a1e79bed56bfd9274dd9ca81a9664c"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/getRandom.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/getRandom.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":10,"column":18},"end":{"line":13,"column":1}},"3":{"start":{"line":11,"column":19},"end":{"line":11,"column":70}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":18},"end":{"line":10,"column":19}},"loc":{"start":{"line":10,"column":31},"end":{"line":13,"column":1}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/getRandom.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/getRandom.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACI,MAAM,SAAS,GAAG,CAAI,OAAiB,EAAK,EAAE;IACnD,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACnE,OAAO,MAAW,CAAC;AACrB,CAAC,CAAC;AAHW,QAAA,SAAS,aAGpB","sourcesContent":["/**\n * Returns a random index from the given array of phrases.\n *\n * @param {string[]} phrases An array of sentences to choose from.\n * @returns {number} The random index.\n */\nexport const getRandom = <T>(phrases: Array<T>): T => {\n  const result = phrases[Math.floor(Math.random() * phrases.length)];\n  return result as T;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"07e71e384a05df8f10366dd4af061b903914d00b","contentHash":"25525a9dbfd2cad064576c04995fbad1a271c7b9a67751ac4a873b2883b95aff"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/validateLove.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/validateLove.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":50}},"4":{"start":{"line":14,"column":21},"end":{"line":28,"column":1}},"5":{"start":{"line":15,"column":4},"end":{"line":27,"column":5}},"6":{"start":{"line":16,"column":8},"end":{"line":22,"column":106}},"7":{"start":{"line":25,"column":8},"end":{"line":25,"column":68}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":21}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":40},"end":{"line":28,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":22,"column":104}},"type":"binary-expr","locations":[{"start":{"line":16,"column":16},"end":{"line":19,"column":46}},{"start":{"line":20,"column":12},"end":{"line":20,"column":48}},{"start":{"line":21,"column":13},"end":{"line":21,"column":22}},{"start":{"line":22,"column":17},"end":{"line":22,"column":46}},{"start":{"line":22,"column":50},"end":{"line":22,"column":102}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1},"f":{"0":0},"b":{"0":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/validateLove.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/validateLove.ts"],"names":[],"mappings":";;;AAGA,wDAAqD;AAErD,mDAAgD;AAEhD;;;;;;;GAOG;AACI,MAAM,YAAY,GAAG,CAAC,OAAgB,EAAE,IAAc,EAAW,EAAE;IACxE,IAAI;QACF,OAAO,CACL,OAAO,CAAC,OAAO;aACZ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;aAClB,WAAW,EAAE;aACb,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACpC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;YACpC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBACR,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,IAAA,6BAAa,EAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CACtE,CAAC;KACH;IAAC,OAAO,GAAG,EAAE;QACZ,KAAK,IAAA,2BAAY,EAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACxC,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAC;AAfW,QAAA,YAAY,gBAevB","sourcesContent":["import { Message } from \"discord.js\";\n\nimport { LoveData } from \"../interfaces/LoveData\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\nimport { checkMentions } from \"./checkMentions\";\n\n/**\n * Universal module to check if the message meets the love\n * requirements.\n *\n * @param {Message} message The message to validate.\n * @param {LoveData} data The data to validate against.\n * @returns {boolean} True if message meets conditions.\n */\nexport const validateLove = (message: Message, data: LoveData): boolean => {\n  try {\n    return (\n      message.content\n        .replace(/\\s/g, \"\")\n        .toLowerCase()\n        .includes(data.name.toLowerCase()) ||\n      message.content.includes(data.emoji) ||\n      (!!data.id &&\n        (message.author.id === data.id || checkMentions(message, data.id)))\n    );\n  } catch (err) {\n    void errorHandler(\"validate love\", err);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"502dbe58fec512c97ba6552283ab53068aec6b82","contentHash":"b2392f8180a92c76bf79ded4ac40473cd4f938898fbc1ef3088d317c9a47c88b"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkMentions.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkMentions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":56}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":13,"column":1}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkMentions.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/modules/checkMentions.ts"],"names":[],"mappings":";;;AAEA;;;;;;GAMG;AACI,MAAM,aAAa,GAAG,CAAC,OAAgB,EAAE,OAAe,EAAW,EAAE;IAC1E,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACtD,CAAC,CAAC;AAFW,QAAA,aAAa,iBAExB","sourcesContent":["import { Message } from \"discord.js\";\n\n/**\n * Validates if the message content includes a specific user ID.\n *\n * @param {Message} message The message to check.\n * @param {string} checkId The ID to look for a mention of.\n * @returns {boolean} True if the content includes the ID, false otherwise.\n */\nexport const checkMentions = (message: Message, checkId: string): boolean => {\n  return message.content.toString().includes(checkId);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9dfbd73d186d45b13ab51f76717c249a0b5c036a","contentHash":"0984ef1aeb11e7faa927d2d31e268da740becbe451746e39883b89c6c74db346"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessageEdit.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessageEdit.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":55}},"4":{"start":{"line":12,"column":22},"end":{"line":22,"column":1}},"5":{"start":{"line":13,"column":4},"end":{"line":21,"column":5}},"6":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"7":{"start":{"line":15,"column":12},"end":{"line":15,"column":19}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":70}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":69}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":22},"end":{"line":12,"column":23}},"loc":{"start":{"line":12,"column":49},"end":{"line":22,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessageEdit.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onMessageEdit.ts"],"names":[],"mappings":";;;AAGA,0DAAuD;AACvD,wDAAqD;AAErD;;;;;GAKG;AACI,MAAM,aAAa,GAAG,KAAK,EAChC,OAAgB,EAChB,MAAW,EACI,EAAE;IACjB,IAAI;QACF,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE;YACzC,OAAO;SACR;QAED,MAAM,IAAA,2BAAY,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;KAC3C;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,eAAe,EAAE,GAAG,CAAC,CAAC;KAC1C;AACH,CAAC,CAAC;AAbW,QAAA,aAAa,iBAaxB","sourcesContent":["import { Message } from \"discord.js\";\n\nimport { Bot } from \"../interfaces/Bot\";\nimport { checkProject } from \"../modules/checkProject\";\nimport { errorHandler } from \"../utils/errorHandler\";\n\n/**\n * Handles the message edit event.\n *\n * @param {Message} message The message object.\n * @param {Bot} client The client object.\n */\nexport const onMessageEdit = async (\n  message: Message,\n  client: Bot\n): Promise<void> => {\n  try {\n    if (message.author.id === client.user?.id) {\n      return;\n    }\n\n    await checkProject(client, message, true);\n  } catch (err) {\n    await errorHandler(\"message event\", err);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0b1fd0c8b7d6721d325f0dfdf7cba169606680ec","contentHash":"9a48cb281d0cdd813699daf3eb9ec7688aa6b421f00b3463e55c7cbf0de2a8cb"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onReady.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onReady.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":21},"end":{"line":6,"column":51}},"5":{"start":{"line":7,"column":27},"end":{"line":7,"column":63}},"6":{"start":{"line":13,"column":16},"end":{"line":27,"column":1}},"7":{"start":{"line":14,"column":4},"end":{"line":26,"column":5}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":66}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":183}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":102}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":63}},"12":{"start":{"line":21,"column":21},"end":{"line":21,"column":84}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":53}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":67}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":17}},"loc":{"start":{"line":13,"column":34},"end":{"line":27,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":182}},"type":"cond-expr","locations":[{"start":{"line":17,"column":14},"end":{"line":17,"column":118}},{"start":{"line":18,"column":14},"end":{"line":18,"column":182}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onReady.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/events/onReady.ts"],"names":[],"mappings":";;;AAAA,2CAA2C;AAG3C,wDAAqD;AACrD,oDAAiD;AACjD,gEAA6D;AAE7D;;;;GAIG;AACI,MAAM,OAAO,GAAG,KAAK,EAAE,MAAW,EAAiB,EAAE;IAC1D,IAAI;QACF,uBAAU,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAE7C,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;YACnC,CAAC,CAAC,uBAAU,CAAC,GAAG,CACZ,MAAM,EACN,mEAAmE,CACpE;YACH,CAAC,CAAC,uBAAU,CAAC,GAAG,CACZ,MAAM,EACN,mIAAmI,CACpI,CAAC;QAEN,uBAAU,CAAC,GAAG,CACZ,OAAO,EACP,sBAAsB,MAAM,CAAC,QAAQ,GAAG,IAAI,WAAW,CACxD,CAAC;QAEF,MAAM,IAAA,mCAAgB,EAAC,MAAM,CAAC,CAAC;QAE/B,MAAM,IAAI,GAAG,IAAI,0BAAa,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,UAAoB,EAAE,CAAC,CAAC;QAE1E,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;KAC9C;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,aAAa,EAAE,GAAG,CAAC,CAAC;KACxC;AACH,CAAC,CAAC;AA3BW,QAAA,OAAO,WA2BlB","sourcesContent":["import { WebhookClient } from \"discord.js\";\n\nimport { Bot } from \"../interfaces/Bot\";\nimport { errorHandler } from \"../utils/errorHandler\";\nimport { logHandler } from \"../utils/logHandler\";\nimport { registerCommands } from \"../utils/registerCommands\";\n\n/**\n * Handles the ready event (when the bot connects to Discord).\n *\n * @param {Bot} client The client object.\n */\nexport const onReady = async (client: Bot): Promise<void> => {\n  try {\n    logHandler.log(\"debug\", \"Discord is ready!\");\n\n    process.env.NODE_ENV === \"production\"\n      ? logHandler.log(\n          \"info\",\n          \"Bot is in production mode - channel lock and cooldown are active.\"\n        )\n      : logHandler.log(\n          \"warn\",\n          \"Bot is NOT in production mode - if this a live instance, please set NODE_ENV to 'production'. Protections are disabled otherwise.\"\n        );\n\n    logHandler.log(\n      \"debug\",\n      `Cooldown is set to ${client.cooldown / 1000} seconds.`\n    );\n\n    await registerCommands(client);\n\n    const hook = new WebhookClient({ url: process.env.DEBUG_HOOK as string });\n\n    await hook.send(\"Hacktoberfest bot online!\");\n  } catch (err) {\n    await errorHandler(\"ready event\", err);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fa225b07de28501de12d8abf53596584bb1245e7","contentHash":"a6c8a0a57a578c015efc4d79e428658f4b37f6acd843752835eea4658ec0dc4b"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/registerCommands.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/registerCommands.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":21},"end":{"line":6,"column":44}},"5":{"start":{"line":15,"column":25},"end":{"line":27,"column":1}},"6":{"start":{"line":16,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":17,"column":21},"end":{"line":17,"column":81}},"8":{"start":{"line":18,"column":28},"end":{"line":18,"column":80}},"9":{"start":{"line":18,"column":58},"end":{"line":18,"column":79}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":79}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":131}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":73}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":25},"end":{"line":15,"column":26}},"loc":{"start":{"line":15,"column":40},"end":{"line":27,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":45},"end":{"line":18,"column":46}},"loc":{"start":{"line":18,"column":58},"end":{"line":18,"column":79}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":68},"end":{"line":20,"column":90}},"type":"binary-expr","locations":[{"start":{"line":20,"column":68},"end":{"line":20,"column":80}},{"start":{"line":20,"column":84},"end":{"line":20,"column":90}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"f":{"0":0,"1":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/registerCommands.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/registerCommands.ts"],"names":[],"mappings":";;;AAAA,2CAA0C;AAI1C,iDAA8C;AAC9C,6CAA0C;AAE1C;;;;;;;GAOG;AACI,MAAM,gBAAgB,GAAG,KAAK,EAAE,GAAQ,EAAoB,EAAE;IACnE,IAAI;QACF,MAAM,IAAI,GAAG,IAAI,iBAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE7D,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAEzE,uBAAU,CAAC,GAAG,CAAC,OAAO,EAAE,gCAAgC,CAAC,CAAC;QAE1D,MAAM,IAAI,CAAC,GAAG,CACZ,mBAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,EACtE,EAAE,IAAI,EAAE,WAAW,EAAE,CACtB,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QAC7C,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAC;AAjBW,QAAA,gBAAgB,oBAiB3B","sourcesContent":["import { REST, Routes } from \"discord.js\";\n\nimport { Bot } from \"../interfaces/Bot\";\n\nimport { errorHandler } from \"./errorHandler\";\nimport { logHandler } from \"./logHandler\";\n\n/**\n * Takes both the commands and contexts, parses the `data` properties as needed,\n * and builds an array of all command data. Then, posts the data to the Discord endpoint\n * for registering commands.\n *\n * @param {Bot} bot Bot's Discord instance.\n * @returns {boolean} True if the commands were registered, false  on error.\n */\nexport const registerCommands = async (bot: Bot): Promise<boolean> => {\n  try {\n    const rest = new REST({ version: \"10\" }).setToken(bot.token);\n\n    const commandData = bot.commands.map((command) => command.data.toJSON());\n\n    logHandler.log(\"debug\", \"registering to home guild only\");\n\n    await rest.put(\n      Routes.applicationGuildCommands(bot.user?.id || \"oops\", bot.homeGuild),\n      { body: commandData }\n    );\n    return true;\n  } catch (err) {\n    await errorHandler(\"register commands\", err);\n    return false;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aa3bd12f0c95aff4ca5bf1beedd10443505c93d6","contentHash":"a7afa50d8f6c40413a634d739c1bb35fb18d729a9b23f1e08579c2709a0a59a7"},"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/loadCommands.ts":{"path":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/loadCommands.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"26":{"start":{"line":27,"column":19},"end":{"line":27,"column":41}},"27":{"start":{"line":28,"column":15},"end":{"line":28,"column":30}},"28":{"start":{"line":29,"column":23},"end":{"line":29,"column":48}},"29":{"start":{"line":36,"column":21},"end":{"line":54,"column":1}},"30":{"start":{"line":37,"column":4},"end":{"line":53,"column":5}},"31":{"start":{"line":38,"column":23},"end":{"line":38,"column":25}},"32":{"start":{"line":39,"column":22},"end":{"line":39,"column":113}},"33":{"start":{"line":40,"column":8},"end":{"line":47,"column":9}},"34":{"start":{"line":41,"column":25},"end":{"line":41,"column":43}},"35":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"36":{"start":{"line":43,"column":16},"end":{"line":43,"column":25}},"37":{"start":{"line":45,"column":24},"end":{"line":45,"column":150}},"38":{"start":{"line":45,"column":125},"end":{"line":45,"column":149}},"39":{"start":{"line":46,"column":12},"end":{"line":46,"column":35}},"40":{"start":{"line":48,"column":8},"end":{"line":48,"column":22}},"41":{"start":{"line":51,"column":8},"end":{"line":51,"column":69}},"42":{"start":{"line":52,"column":8},"end":{"line":52,"column":18}},"43":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":36,"column":21},"end":{"line":36,"column":22}},"loc":{"start":{"line":36,"column":33},"end":{"line":54,"column":1}},"line":36},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":120},"end":{"line":45,"column":121}},"loc":{"start":{"line":45,"column":125},"end":{"line":45,"column":149}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{"line":42,"column":12},"end":{"line":44,"column":13}}],"line":42}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/loadCommands.ts","sources":["/home/naomi/github/nhcarrigan/hacktoberfest/src/utils/loadCommands.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0CAAsC;AACtC,+BAA4B;AAI5B,iDAA8C;AAE9C;;;;;GAKG;AACI,MAAM,YAAY,GAAG,KAAK,IAAwB,EAAE;IACzD,IAAI;QACF,MAAM,MAAM,GAAc,EAAE,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,IAAA,kBAAO,EACzB,IAAA,WAAI,EAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,EACvC,OAAO,CACR,CAAC;QACF,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,EAAE;gBACT,SAAS;aACV;YACD,MAAM,GAAG,GAAG,yBACV,IAAA,WAAI,EAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,EAAE,CAAC,uCACnD,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAY,CAAC,CAAC;SACnC;QACD,OAAO,MAAM,CAAC;KACf;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAA,2BAAY,EAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;KACX;AACH,CAAC,CAAC;AAtBW,QAAA,YAAY,gBAsBvB","sourcesContent":["import { readdir } from \"fs/promises\";\nimport { join } from \"path\";\n\nimport { Command } from \"../interfaces/Command\";\n\nimport { errorHandler } from \"./errorHandler\";\n\n/**\n * Reads the `/commands` directory and dynamically imports the files,\n * then pushes the imported data to an array.\n *\n * @returns {Command[]} Array of Command objects representing the imported commands.\n */\nexport const loadCommands = async (): Promise<Command[]> => {\n  try {\n    const result: Command[] = [];\n    const files = await readdir(\n      join(process.cwd(), \"prod\", \"commands\"),\n      \"utf-8\"\n    );\n    for (const file of files) {\n      const name = file.split(\".\")[0];\n      if (!name) {\n        continue;\n      }\n      const mod = await import(\n        join(process.cwd(), \"prod\", \"commands\", `${file}`)\n      );\n      result.push(mod[name] as Command);\n    }\n    return result;\n  } catch (err) {\n    await errorHandler(\"load commands\", err);\n    return [];\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a72b8a20c8c09beb6529e2ac88dd7b5256db1f00","contentHash":"b31c9b678294aa7fe828ec37fffbdbc037f66559fc0b7bf8b43e1d5b6a1c250b"}}